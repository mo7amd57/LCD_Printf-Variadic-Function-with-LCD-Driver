
01-Atmega32_Drivers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000014ca  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  000014ca  0000155e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001e  00800168  00800168  00001666  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001666  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001698  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000270  00000000  00000000  000016d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003b4e  00000000  00000000  00001944  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fcf  00000000  00000000  00005492  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000188c  00000000  00000000  00006461  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000678  00000000  00000000  00007cf0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000010ba  00000000  00000000  00008368  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002aaf  00000000  00000000  00009422  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c8  00000000  00000000  0000bed1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__ctors_end>
       4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
       8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
       c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      10:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      14:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      18:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      1c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      20:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      24:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      28:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      2c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      30:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      34:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      38:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      3c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      40:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      44:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      48:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      4c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      50:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      54:	f5 04       	cpc	r15, r5
      56:	8f 04       	cpc	r8, r15
      58:	74 04       	cpc	r7, r4
      5a:	16 05       	cpc	r17, r6
      5c:	c0 04       	cpc	r12, r0
      5e:	16 05       	cpc	r17, r6
      60:	16 05       	cpc	r17, r6
      62:	16 05       	cpc	r17, r6
      64:	16 05       	cpc	r17, r6
      66:	16 05       	cpc	r17, r6
      68:	16 05       	cpc	r17, r6
      6a:	16 05       	cpc	r17, r6
      6c:	16 05       	cpc	r17, r6
      6e:	16 05       	cpc	r17, r6
      70:	16 05       	cpc	r17, r6
      72:	16 05       	cpc	r17, r6
      74:	16 05       	cpc	r17, r6
      76:	a6 04       	cpc	r10, r6
      78:	16 05       	cpc	r17, r6
      7a:	dc 04       	cpc	r13, r12
      7c:	16 05       	cpc	r17, r6
      7e:	16 05       	cpc	r17, r6
      80:	0b 05       	cpc	r16, r11
      82:	16 05       	cpc	r17, r6
      84:	16 05       	cpc	r17, r6
      86:	16 05       	cpc	r17, r6
      88:	16 05       	cpc	r17, r6
      8a:	16 05       	cpc	r17, r6
      8c:	16 05       	cpc	r17, r6
      8e:	16 05       	cpc	r17, r6
      90:	16 05       	cpc	r17, r6
      92:	16 05       	cpc	r17, r6
      94:	ea 04       	cpc	r14, r10
      96:	84 04       	cpc	r8, r4
      98:	64 04       	cpc	r6, r4
      9a:	16 05       	cpc	r17, r6
      9c:	b2 04       	cpc	r11, r2
      9e:	16 05       	cpc	r17, r6
      a0:	16 05       	cpc	r17, r6
      a2:	16 05       	cpc	r17, r6
      a4:	16 05       	cpc	r17, r6
      a6:	16 05       	cpc	r17, r6
      a8:	16 05       	cpc	r17, r6
      aa:	16 05       	cpc	r17, r6
      ac:	16 05       	cpc	r17, r6
      ae:	16 05       	cpc	r17, r6
      b0:	16 05       	cpc	r17, r6
      b2:	16 05       	cpc	r17, r6
      b4:	16 05       	cpc	r17, r6
      b6:	9a 04       	cpc	r9, r10
      b8:	16 05       	cpc	r17, r6
      ba:	ce 04       	cpc	r12, r14
      bc:	16 05       	cpc	r17, r6
      be:	16 05       	cpc	r17, r6
      c0:	00 05       	cpc	r16, r0

000000c2 <__ctors_end>:
      c2:	11 24       	eor	r1, r1
      c4:	1f be       	out	0x3f, r1	; 63
      c6:	cf e5       	ldi	r28, 0x5F	; 95
      c8:	d8 e0       	ldi	r29, 0x08	; 8
      ca:	de bf       	out	0x3e, r29	; 62
      cc:	cd bf       	out	0x3d, r28	; 61

000000ce <__do_copy_data>:
      ce:	11 e0       	ldi	r17, 0x01	; 1
      d0:	a0 e6       	ldi	r26, 0x60	; 96
      d2:	b0 e0       	ldi	r27, 0x00	; 0
      d4:	ea ec       	ldi	r30, 0xCA	; 202
      d6:	f4 e1       	ldi	r31, 0x14	; 20
      d8:	02 c0       	rjmp	.+4      	; 0xde <__do_copy_data+0x10>
      da:	05 90       	lpm	r0, Z+
      dc:	0d 92       	st	X+, r0
      de:	a8 36       	cpi	r26, 0x68	; 104
      e0:	b1 07       	cpc	r27, r17
      e2:	d9 f7       	brne	.-10     	; 0xda <__do_copy_data+0xc>

000000e4 <__do_clear_bss>:
      e4:	21 e0       	ldi	r18, 0x01	; 1
      e6:	a8 e6       	ldi	r26, 0x68	; 104
      e8:	b1 e0       	ldi	r27, 0x01	; 1
      ea:	01 c0       	rjmp	.+2      	; 0xee <.do_clear_bss_start>

000000ec <.do_clear_bss_loop>:
      ec:	1d 92       	st	X+, r1

000000ee <.do_clear_bss_start>:
      ee:	a6 38       	cpi	r26, 0x86	; 134
      f0:	b2 07       	cpc	r27, r18
      f2:	e1 f7       	brne	.-8      	; 0xec <.do_clear_bss_loop>
      f4:	0e 94 63 05 	call	0xac6	; 0xac6 <main>
      f8:	0c 94 63 0a 	jmp	0x14c6	; 0x14c6 <_exit>

000000fc <__bad_interrupt>:
      fc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000100 <KEYPAD_Init>:
}



void KEYPAD_Init(void)
{
     100:	cf 93       	push	r28
	u8 i;
	for (i=0 ; i<ROWS ; i++)
     102:	c0 e0       	ldi	r28, 0x00	; 0
     104:	09 c0       	rjmp	.+18     	; 0x118 <KEYPAD_Init+0x18>
	{
		DIO_enuWritePin(KPD_OutPutPins[i],HIGH);
     106:	ec 2f       	mov	r30, r28
     108:	f0 e0       	ldi	r31, 0x00	; 0
     10a:	ec 57       	subi	r30, 0x7C	; 124
     10c:	ff 4f       	sbci	r31, 0xFF	; 255
     10e:	61 e0       	ldi	r22, 0x01	; 1
     110:	80 81       	ld	r24, Z
     112:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>


void KEYPAD_Init(void)
{
	u8 i;
	for (i=0 ; i<ROWS ; i++)
     116:	cf 5f       	subi	r28, 0xFF	; 255
     118:	c4 30       	cpi	r28, 0x04	; 4
     11a:	a8 f3       	brcs	.-22     	; 0x106 <KEYPAD_Init+0x6>
	{
		DIO_enuWritePin(KPD_OutPutPins[i],HIGH);
	}
}
     11c:	cf 91       	pop	r28
     11e:	08 95       	ret

00000120 <LCD_WriteInstruction>:
	{
		LCD_SetCursor(lcdnum,Linecell,Cell);
		LCD_WriteChar(lcdnum,' ');
	}
	
}
     120:	1f 93       	push	r17
     122:	cf 93       	push	r28
     124:	df 93       	push	r29
     126:	16 2f       	mov	r17, r22
     128:	90 e0       	ldi	r25, 0x00	; 0
     12a:	fc 01       	movw	r30, r24
     12c:	ee 0f       	add	r30, r30
     12e:	ff 1f       	adc	r31, r31
     130:	9c 01       	movw	r18, r24
     132:	22 0f       	add	r18, r18
     134:	33 1f       	adc	r19, r19
     136:	22 0f       	add	r18, r18
     138:	33 1f       	adc	r19, r19
     13a:	22 0f       	add	r18, r18
     13c:	33 1f       	adc	r19, r19
     13e:	e2 0f       	add	r30, r18
     140:	f3 1f       	adc	r31, r19
     142:	e8 59       	subi	r30, 0x98	; 152
     144:	fe 4f       	sbci	r31, 0xFE	; 254
     146:	22 81       	ldd	r18, Z+2	; 0x02
     148:	21 30       	cpi	r18, 0x01	; 1
     14a:	f1 f4       	brne	.+60     	; 0x188 <LCD_WriteInstruction+0x68>
     14c:	ef 01       	movw	r28, r30
     14e:	60 e0       	ldi	r22, 0x00	; 0
     150:	80 81       	ld	r24, Z
     152:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     156:	61 2f       	mov	r22, r17
     158:	8b 81       	ldd	r24, Y+3	; 0x03
     15a:	0e 94 05 08 	call	0x100a	; 0x100a <DIO_enuWritePort>
     15e:	61 e0       	ldi	r22, 0x01	; 1
     160:	89 81       	ldd	r24, Y+1	; 0x01
     162:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     166:	8f ec       	ldi	r24, 0xCF	; 207
     168:	97 e0       	ldi	r25, 0x07	; 7
     16a:	01 97       	sbiw	r24, 0x01	; 1
     16c:	f1 f7       	brne	.-4      	; 0x16a <LCD_WriteInstruction+0x4a>
     16e:	00 c0       	rjmp	.+0      	; 0x170 <LCD_WriteInstruction+0x50>
     170:	00 00       	nop
     172:	60 e0       	ldi	r22, 0x00	; 0
     174:	89 81       	ldd	r24, Y+1	; 0x01
     176:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     17a:	8f ec       	ldi	r24, 0xCF	; 207
     17c:	97 e0       	ldi	r25, 0x07	; 7
     17e:	01 97       	sbiw	r24, 0x01	; 1
     180:	f1 f7       	brne	.-4      	; 0x17e <LCD_WriteInstruction+0x5e>
     182:	00 c0       	rjmp	.+0      	; 0x184 <LCD_WriteInstruction+0x64>
     184:	00 00       	nop
     186:	6b c0       	rjmp	.+214    	; 0x25e <LCD_WriteInstruction+0x13e>
     188:	21 11       	cpse	r18, r1
     18a:	69 c0       	rjmp	.+210    	; 0x25e <LCD_WriteInstruction+0x13e>
     18c:	ec 01       	movw	r28, r24
     18e:	cc 0f       	add	r28, r28
     190:	dd 1f       	adc	r29, r29
     192:	88 0f       	add	r24, r24
     194:	99 1f       	adc	r25, r25
     196:	88 0f       	add	r24, r24
     198:	99 1f       	adc	r25, r25
     19a:	88 0f       	add	r24, r24
     19c:	99 1f       	adc	r25, r25
     19e:	c8 0f       	add	r28, r24
     1a0:	d9 1f       	adc	r29, r25
     1a2:	c8 59       	subi	r28, 0x98	; 152
     1a4:	de 4f       	sbci	r29, 0xFE	; 254
     1a6:	60 e0       	ldi	r22, 0x00	; 0
     1a8:	88 81       	ld	r24, Y
     1aa:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     1ae:	61 2f       	mov	r22, r17
     1b0:	66 1f       	adc	r22, r22
     1b2:	66 27       	eor	r22, r22
     1b4:	66 1f       	adc	r22, r22
     1b6:	8f 81       	ldd	r24, Y+7	; 0x07
     1b8:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     1bc:	16 fb       	bst	r17, 6
     1be:	66 27       	eor	r22, r22
     1c0:	60 f9       	bld	r22, 0
     1c2:	8e 81       	ldd	r24, Y+6	; 0x06
     1c4:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     1c8:	15 fb       	bst	r17, 5
     1ca:	66 27       	eor	r22, r22
     1cc:	60 f9       	bld	r22, 0
     1ce:	8d 81       	ldd	r24, Y+5	; 0x05
     1d0:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     1d4:	14 fb       	bst	r17, 4
     1d6:	66 27       	eor	r22, r22
     1d8:	60 f9       	bld	r22, 0
     1da:	8c 81       	ldd	r24, Y+4	; 0x04
     1dc:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     1e0:	61 e0       	ldi	r22, 0x01	; 1
     1e2:	89 81       	ldd	r24, Y+1	; 0x01
     1e4:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     1e8:	8f ec       	ldi	r24, 0xCF	; 207
     1ea:	97 e0       	ldi	r25, 0x07	; 7
     1ec:	01 97       	sbiw	r24, 0x01	; 1
     1ee:	f1 f7       	brne	.-4      	; 0x1ec <LCD_WriteInstruction+0xcc>
     1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <LCD_WriteInstruction+0xd2>
     1f2:	00 00       	nop
     1f4:	60 e0       	ldi	r22, 0x00	; 0
     1f6:	89 81       	ldd	r24, Y+1	; 0x01
     1f8:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     1fc:	8f ec       	ldi	r24, 0xCF	; 207
     1fe:	97 e0       	ldi	r25, 0x07	; 7
     200:	01 97       	sbiw	r24, 0x01	; 1
     202:	f1 f7       	brne	.-4      	; 0x200 <LCD_WriteInstruction+0xe0>
     204:	00 c0       	rjmp	.+0      	; 0x206 <LCD_WriteInstruction+0xe6>
     206:	00 00       	nop
     208:	13 fb       	bst	r17, 3
     20a:	66 27       	eor	r22, r22
     20c:	60 f9       	bld	r22, 0
     20e:	8f 81       	ldd	r24, Y+7	; 0x07
     210:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     214:	12 fb       	bst	r17, 2
     216:	66 27       	eor	r22, r22
     218:	60 f9       	bld	r22, 0
     21a:	8e 81       	ldd	r24, Y+6	; 0x06
     21c:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     220:	11 fb       	bst	r17, 1
     222:	66 27       	eor	r22, r22
     224:	60 f9       	bld	r22, 0
     226:	8d 81       	ldd	r24, Y+5	; 0x05
     228:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     22c:	61 2f       	mov	r22, r17
     22e:	61 70       	andi	r22, 0x01	; 1
     230:	8c 81       	ldd	r24, Y+4	; 0x04
     232:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     236:	61 e0       	ldi	r22, 0x01	; 1
     238:	89 81       	ldd	r24, Y+1	; 0x01
     23a:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     23e:	8f ec       	ldi	r24, 0xCF	; 207
     240:	97 e0       	ldi	r25, 0x07	; 7
     242:	01 97       	sbiw	r24, 0x01	; 1
     244:	f1 f7       	brne	.-4      	; 0x242 <LCD_WriteInstruction+0x122>
     246:	00 c0       	rjmp	.+0      	; 0x248 <LCD_WriteInstruction+0x128>
     248:	00 00       	nop
     24a:	60 e0       	ldi	r22, 0x00	; 0
     24c:	89 81       	ldd	r24, Y+1	; 0x01
     24e:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     252:	8f ec       	ldi	r24, 0xCF	; 207
     254:	97 e0       	ldi	r25, 0x07	; 7
     256:	01 97       	sbiw	r24, 0x01	; 1
     258:	f1 f7       	brne	.-4      	; 0x256 <LCD_WriteInstruction+0x136>
     25a:	00 c0       	rjmp	.+0      	; 0x25c <LCD_WriteInstruction+0x13c>
     25c:	00 00       	nop
     25e:	df 91       	pop	r29
     260:	cf 91       	pop	r28
     262:	1f 91       	pop	r17
     264:	08 95       	ret

00000266 <LCD_WriteData>:
     266:	1f 93       	push	r17
     268:	cf 93       	push	r28
     26a:	df 93       	push	r29
     26c:	16 2f       	mov	r17, r22
     26e:	90 e0       	ldi	r25, 0x00	; 0
     270:	fc 01       	movw	r30, r24
     272:	ee 0f       	add	r30, r30
     274:	ff 1f       	adc	r31, r31
     276:	9c 01       	movw	r18, r24
     278:	22 0f       	add	r18, r18
     27a:	33 1f       	adc	r19, r19
     27c:	22 0f       	add	r18, r18
     27e:	33 1f       	adc	r19, r19
     280:	22 0f       	add	r18, r18
     282:	33 1f       	adc	r19, r19
     284:	e2 0f       	add	r30, r18
     286:	f3 1f       	adc	r31, r19
     288:	e8 59       	subi	r30, 0x98	; 152
     28a:	fe 4f       	sbci	r31, 0xFE	; 254
     28c:	22 81       	ldd	r18, Z+2	; 0x02
     28e:	21 30       	cpi	r18, 0x01	; 1
     290:	f1 f4       	brne	.+60     	; 0x2ce <LCD_WriteData+0x68>
     292:	ef 01       	movw	r28, r30
     294:	61 e0       	ldi	r22, 0x01	; 1
     296:	80 81       	ld	r24, Z
     298:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     29c:	61 2f       	mov	r22, r17
     29e:	8b 81       	ldd	r24, Y+3	; 0x03
     2a0:	0e 94 05 08 	call	0x100a	; 0x100a <DIO_enuWritePort>
     2a4:	61 e0       	ldi	r22, 0x01	; 1
     2a6:	89 81       	ldd	r24, Y+1	; 0x01
     2a8:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     2ac:	8f ec       	ldi	r24, 0xCF	; 207
     2ae:	97 e0       	ldi	r25, 0x07	; 7
     2b0:	01 97       	sbiw	r24, 0x01	; 1
     2b2:	f1 f7       	brne	.-4      	; 0x2b0 <LCD_WriteData+0x4a>
     2b4:	00 c0       	rjmp	.+0      	; 0x2b6 <LCD_WriteData+0x50>
     2b6:	00 00       	nop
     2b8:	60 e0       	ldi	r22, 0x00	; 0
     2ba:	89 81       	ldd	r24, Y+1	; 0x01
     2bc:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     2c0:	8f ec       	ldi	r24, 0xCF	; 207
     2c2:	97 e0       	ldi	r25, 0x07	; 7
     2c4:	01 97       	sbiw	r24, 0x01	; 1
     2c6:	f1 f7       	brne	.-4      	; 0x2c4 <LCD_WriteData+0x5e>
     2c8:	00 c0       	rjmp	.+0      	; 0x2ca <LCD_WriteData+0x64>
     2ca:	00 00       	nop
     2cc:	6b c0       	rjmp	.+214    	; 0x3a4 <LCD_WriteData+0x13e>
     2ce:	21 11       	cpse	r18, r1
     2d0:	69 c0       	rjmp	.+210    	; 0x3a4 <LCD_WriteData+0x13e>
     2d2:	ec 01       	movw	r28, r24
     2d4:	cc 0f       	add	r28, r28
     2d6:	dd 1f       	adc	r29, r29
     2d8:	88 0f       	add	r24, r24
     2da:	99 1f       	adc	r25, r25
     2dc:	88 0f       	add	r24, r24
     2de:	99 1f       	adc	r25, r25
     2e0:	88 0f       	add	r24, r24
     2e2:	99 1f       	adc	r25, r25
     2e4:	c8 0f       	add	r28, r24
     2e6:	d9 1f       	adc	r29, r25
     2e8:	c8 59       	subi	r28, 0x98	; 152
     2ea:	de 4f       	sbci	r29, 0xFE	; 254
     2ec:	61 e0       	ldi	r22, 0x01	; 1
     2ee:	88 81       	ld	r24, Y
     2f0:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     2f4:	61 2f       	mov	r22, r17
     2f6:	66 1f       	adc	r22, r22
     2f8:	66 27       	eor	r22, r22
     2fa:	66 1f       	adc	r22, r22
     2fc:	8f 81       	ldd	r24, Y+7	; 0x07
     2fe:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     302:	16 fb       	bst	r17, 6
     304:	66 27       	eor	r22, r22
     306:	60 f9       	bld	r22, 0
     308:	8e 81       	ldd	r24, Y+6	; 0x06
     30a:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     30e:	15 fb       	bst	r17, 5
     310:	66 27       	eor	r22, r22
     312:	60 f9       	bld	r22, 0
     314:	8d 81       	ldd	r24, Y+5	; 0x05
     316:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     31a:	14 fb       	bst	r17, 4
     31c:	66 27       	eor	r22, r22
     31e:	60 f9       	bld	r22, 0
     320:	8c 81       	ldd	r24, Y+4	; 0x04
     322:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     326:	61 e0       	ldi	r22, 0x01	; 1
     328:	89 81       	ldd	r24, Y+1	; 0x01
     32a:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     32e:	8f ec       	ldi	r24, 0xCF	; 207
     330:	97 e0       	ldi	r25, 0x07	; 7
     332:	01 97       	sbiw	r24, 0x01	; 1
     334:	f1 f7       	brne	.-4      	; 0x332 <LCD_WriteData+0xcc>
     336:	00 c0       	rjmp	.+0      	; 0x338 <LCD_WriteData+0xd2>
     338:	00 00       	nop
     33a:	60 e0       	ldi	r22, 0x00	; 0
     33c:	89 81       	ldd	r24, Y+1	; 0x01
     33e:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     342:	8f ec       	ldi	r24, 0xCF	; 207
     344:	97 e0       	ldi	r25, 0x07	; 7
     346:	01 97       	sbiw	r24, 0x01	; 1
     348:	f1 f7       	brne	.-4      	; 0x346 <LCD_WriteData+0xe0>
     34a:	00 c0       	rjmp	.+0      	; 0x34c <LCD_WriteData+0xe6>
     34c:	00 00       	nop
     34e:	13 fb       	bst	r17, 3
     350:	66 27       	eor	r22, r22
     352:	60 f9       	bld	r22, 0
     354:	8f 81       	ldd	r24, Y+7	; 0x07
     356:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     35a:	12 fb       	bst	r17, 2
     35c:	66 27       	eor	r22, r22
     35e:	60 f9       	bld	r22, 0
     360:	8e 81       	ldd	r24, Y+6	; 0x06
     362:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     366:	11 fb       	bst	r17, 1
     368:	66 27       	eor	r22, r22
     36a:	60 f9       	bld	r22, 0
     36c:	8d 81       	ldd	r24, Y+5	; 0x05
     36e:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     372:	61 2f       	mov	r22, r17
     374:	61 70       	andi	r22, 0x01	; 1
     376:	8c 81       	ldd	r24, Y+4	; 0x04
     378:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     37c:	61 e0       	ldi	r22, 0x01	; 1
     37e:	89 81       	ldd	r24, Y+1	; 0x01
     380:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     384:	8f ec       	ldi	r24, 0xCF	; 207
     386:	97 e0       	ldi	r25, 0x07	; 7
     388:	01 97       	sbiw	r24, 0x01	; 1
     38a:	f1 f7       	brne	.-4      	; 0x388 <LCD_WriteData+0x122>
     38c:	00 c0       	rjmp	.+0      	; 0x38e <LCD_WriteData+0x128>
     38e:	00 00       	nop
     390:	60 e0       	ldi	r22, 0x00	; 0
     392:	89 81       	ldd	r24, Y+1	; 0x01
     394:	0e 94 18 07 	call	0xe30	; 0xe30 <DIO_enuWritePin>
     398:	8f ec       	ldi	r24, 0xCF	; 207
     39a:	97 e0       	ldi	r25, 0x07	; 7
     39c:	01 97       	sbiw	r24, 0x01	; 1
     39e:	f1 f7       	brne	.-4      	; 0x39c <LCD_WriteData+0x136>
     3a0:	00 c0       	rjmp	.+0      	; 0x3a2 <LCD_WriteData+0x13c>
     3a2:	00 00       	nop
     3a4:	df 91       	pop	r29
     3a6:	cf 91       	pop	r28
     3a8:	1f 91       	pop	r17
     3aa:	08 95       	ret

000003ac <LCD_MyInitialize>:
     3ac:	40 e0       	ldi	r20, 0x00	; 0
     3ae:	64 c0       	rjmp	.+200    	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
     3b0:	84 2f       	mov	r24, r20
     3b2:	90 e0       	ldi	r25, 0x00	; 0
     3b4:	fc 01       	movw	r30, r24
     3b6:	ee 0f       	add	r30, r30
     3b8:	ff 1f       	adc	r31, r31
     3ba:	9c 01       	movw	r18, r24
     3bc:	22 0f       	add	r18, r18
     3be:	33 1f       	adc	r19, r19
     3c0:	22 0f       	add	r18, r18
     3c2:	33 1f       	adc	r19, r19
     3c4:	22 0f       	add	r18, r18
     3c6:	33 1f       	adc	r19, r19
     3c8:	e2 0f       	add	r30, r18
     3ca:	f3 1f       	adc	r31, r19
     3cc:	e8 59       	subi	r30, 0x98	; 152
     3ce:	fe 4f       	sbci	r31, 0xFE	; 254
     3d0:	10 86       	std	Z+8, r1	; 0x08
     3d2:	11 86       	std	Z+9, r1	; 0x09
     3d4:	fc 01       	movw	r30, r24
     3d6:	e4 55       	subi	r30, 0x54	; 84
     3d8:	ff 4f       	sbci	r31, 0xFF	; 255
     3da:	20 81       	ld	r18, Z
     3dc:	21 30       	cpi	r18, 0x01	; 1
     3de:	e9 f4       	brne	.+58     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
     3e0:	dc 01       	movw	r26, r24
     3e2:	aa 0f       	add	r26, r26
     3e4:	bb 1f       	adc	r27, r27
     3e6:	fc 01       	movw	r30, r24
     3e8:	ee 0f       	add	r30, r30
     3ea:	ff 1f       	adc	r31, r31
     3ec:	ee 0f       	add	r30, r30
     3ee:	ff 1f       	adc	r31, r31
     3f0:	ee 0f       	add	r30, r30
     3f2:	ff 1f       	adc	r31, r31
     3f4:	ea 0f       	add	r30, r26
     3f6:	fb 1f       	adc	r31, r27
     3f8:	e8 59       	subi	r30, 0x98	; 152
     3fa:	fe 4f       	sbci	r31, 0xFE	; 254
     3fc:	22 83       	std	Z+2, r18	; 0x02
     3fe:	a8 0f       	add	r26, r24
     400:	b9 1f       	adc	r27, r25
     402:	ad 55       	subi	r26, 0x5D	; 93
     404:	bf 4f       	sbci	r27, 0xFF	; 255
     406:	8c 91       	ld	r24, X
     408:	80 83       	st	Z, r24
     40a:	11 96       	adiw	r26, 0x01	; 1
     40c:	8c 91       	ld	r24, X
     40e:	11 97       	sbiw	r26, 0x01	; 1
     410:	81 83       	std	Z+1, r24	; 0x01
     412:	12 96       	adiw	r26, 0x02	; 2
     414:	8c 91       	ld	r24, X
     416:	83 83       	std	Z+3, r24	; 0x03
     418:	2e c0       	rjmp	.+92     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
     41a:	21 11       	cpse	r18, r1
     41c:	2c c0       	rjmp	.+88     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
     41e:	fc 01       	movw	r30, r24
     420:	ee 0f       	add	r30, r30
     422:	ff 1f       	adc	r31, r31
     424:	dc 01       	movw	r26, r24
     426:	aa 0f       	add	r26, r26
     428:	bb 1f       	adc	r27, r27
     42a:	aa 0f       	add	r26, r26
     42c:	bb 1f       	adc	r27, r27
     42e:	aa 0f       	add	r26, r26
     430:	bb 1f       	adc	r27, r27
     432:	ae 0f       	add	r26, r30
     434:	bf 1f       	adc	r27, r31
     436:	a8 59       	subi	r26, 0x98	; 152
     438:	be 4f       	sbci	r27, 0xFE	; 254
     43a:	12 96       	adiw	r26, 0x02	; 2
     43c:	1c 92       	st	X, r1
     43e:	12 97       	sbiw	r26, 0x02	; 2
     440:	e8 0f       	add	r30, r24
     442:	f9 1f       	adc	r31, r25
     444:	ee 0f       	add	r30, r30
     446:	ff 1f       	adc	r31, r31
     448:	ef 56       	subi	r30, 0x6F	; 111
     44a:	ff 4f       	sbci	r31, 0xFF	; 255
     44c:	80 81       	ld	r24, Z
     44e:	8c 93       	st	X, r24
     450:	81 81       	ldd	r24, Z+1	; 0x01
     452:	11 96       	adiw	r26, 0x01	; 1
     454:	8c 93       	st	X, r24
     456:	11 97       	sbiw	r26, 0x01	; 1
     458:	82 81       	ldd	r24, Z+2	; 0x02
     45a:	14 96       	adiw	r26, 0x04	; 4
     45c:	8c 93       	st	X, r24
     45e:	14 97       	sbiw	r26, 0x04	; 4
     460:	83 81       	ldd	r24, Z+3	; 0x03
     462:	15 96       	adiw	r26, 0x05	; 5
     464:	8c 93       	st	X, r24
     466:	15 97       	sbiw	r26, 0x05	; 5
     468:	84 81       	ldd	r24, Z+4	; 0x04
     46a:	16 96       	adiw	r26, 0x06	; 6
     46c:	8c 93       	st	X, r24
     46e:	16 97       	sbiw	r26, 0x06	; 6
     470:	85 81       	ldd	r24, Z+5	; 0x05
     472:	17 96       	adiw	r26, 0x07	; 7
     474:	8c 93       	st	X, r24
     476:	4f 5f       	subi	r20, 0xFF	; 255
     478:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <LCDNum>
     47c:	48 17       	cp	r20, r24
     47e:	08 f4       	brcc	.+2      	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
     480:	97 cf       	rjmp	.-210    	; 0x3b0 <LCD_MyInitialize+0x4>
     482:	08 95       	ret

00000484 <LCD_init>:
     484:	0f 93       	push	r16
     486:	1f 93       	push	r17
     488:	cf 93       	push	r28
     48a:	0e 94 d6 01 	call	0x3ac	; 0x3ac <LCD_MyInitialize>
     48e:	2f e7       	ldi	r18, 0x7F	; 127
     490:	88 e3       	ldi	r24, 0x38	; 56
     492:	91 e0       	ldi	r25, 0x01	; 1
     494:	21 50       	subi	r18, 0x01	; 1
     496:	80 40       	sbci	r24, 0x00	; 0
     498:	90 40       	sbci	r25, 0x00	; 0
     49a:	e1 f7       	brne	.-8      	; 0x494 <LCD_init+0x10>
     49c:	00 c0       	rjmp	.+0      	; 0x49e <LCD_init+0x1a>
     49e:	00 00       	nop
     4a0:	c0 e0       	ldi	r28, 0x00	; 0
     4a2:	6f c0       	rjmp	.+222    	; 0x582 <LCD_init+0xfe>
     4a4:	0c 2f       	mov	r16, r28
     4a6:	10 e0       	ldi	r17, 0x00	; 0
     4a8:	f8 01       	movw	r30, r16
     4aa:	ee 0f       	add	r30, r30
     4ac:	ff 1f       	adc	r31, r31
     4ae:	c8 01       	movw	r24, r16
     4b0:	88 0f       	add	r24, r24
     4b2:	99 1f       	adc	r25, r25
     4b4:	88 0f       	add	r24, r24
     4b6:	99 1f       	adc	r25, r25
     4b8:	88 0f       	add	r24, r24
     4ba:	99 1f       	adc	r25, r25
     4bc:	e8 0f       	add	r30, r24
     4be:	f9 1f       	adc	r31, r25
     4c0:	e8 59       	subi	r30, 0x98	; 152
     4c2:	fe 4f       	sbci	r31, 0xFE	; 254
     4c4:	82 81       	ldd	r24, Z+2	; 0x02
     4c6:	81 30       	cpi	r24, 0x01	; 1
     4c8:	59 f5       	brne	.+86     	; 0x520 <LCD_init+0x9c>
     4ca:	f8 01       	movw	r30, r16
     4cc:	e8 57       	subi	r30, 0x78	; 120
     4ce:	ff 4f       	sbci	r31, 0xFF	; 255
     4d0:	80 81       	ld	r24, Z
     4d2:	88 23       	and	r24, r24
     4d4:	19 f0       	breq	.+6      	; 0x4dc <LCD_init+0x58>
     4d6:	81 30       	cpi	r24, 0x01	; 1
     4d8:	31 f0       	breq	.+12     	; 0x4e6 <LCD_init+0x62>
     4da:	09 c0       	rjmp	.+18     	; 0x4ee <LCD_init+0x6a>
     4dc:	68 e3       	ldi	r22, 0x38	; 56
     4de:	8c 2f       	mov	r24, r28
     4e0:	0e 94 90 00 	call	0x120	; 0x120 <LCD_WriteInstruction>
     4e4:	04 c0       	rjmp	.+8      	; 0x4ee <LCD_init+0x6a>
     4e6:	6c e3       	ldi	r22, 0x3C	; 60
     4e8:	8c 2f       	mov	r24, r28
     4ea:	0e 94 90 00 	call	0x120	; 0x120 <LCD_WriteInstruction>
     4ee:	f8 01       	movw	r30, r16
     4f0:	e2 57       	subi	r30, 0x72	; 114
     4f2:	ff 4f       	sbci	r31, 0xFF	; 255
     4f4:	60 81       	ld	r22, Z
     4f6:	8c 2f       	mov	r24, r28
     4f8:	0e 94 90 00 	call	0x120	; 0x120 <LCD_WriteInstruction>
     4fc:	61 e0       	ldi	r22, 0x01	; 1
     4fe:	8c 2f       	mov	r24, r28
     500:	0e 94 90 00 	call	0x120	; 0x120 <LCD_WriteInstruction>
     504:	8f ec       	ldi	r24, 0xCF	; 207
     506:	97 e0       	ldi	r25, 0x07	; 7
     508:	01 97       	sbiw	r24, 0x01	; 1
     50a:	f1 f7       	brne	.-4      	; 0x508 <LCD_init+0x84>
     50c:	00 c0       	rjmp	.+0      	; 0x50e <LCD_init+0x8a>
     50e:	00 00       	nop
     510:	f8 01       	movw	r30, r16
     512:	e5 57       	subi	r30, 0x75	; 117
     514:	ff 4f       	sbci	r31, 0xFF	; 255
     516:	60 81       	ld	r22, Z
     518:	8c 2f       	mov	r24, r28
     51a:	0e 94 90 00 	call	0x120	; 0x120 <LCD_WriteInstruction>
     51e:	30 c0       	rjmp	.+96     	; 0x580 <LCD_init+0xfc>
     520:	81 11       	cpse	r24, r1
     522:	2e c0       	rjmp	.+92     	; 0x580 <LCD_init+0xfc>
     524:	62 e0       	ldi	r22, 0x02	; 2
     526:	8c 2f       	mov	r24, r28
     528:	0e 94 90 00 	call	0x120	; 0x120 <LCD_WriteInstruction>
     52c:	f8 01       	movw	r30, r16
     52e:	e8 57       	subi	r30, 0x78	; 120
     530:	ff 4f       	sbci	r31, 0xFF	; 255
     532:	80 81       	ld	r24, Z
     534:	88 23       	and	r24, r24
     536:	19 f0       	breq	.+6      	; 0x53e <LCD_init+0xba>
     538:	81 30       	cpi	r24, 0x01	; 1
     53a:	31 f0       	breq	.+12     	; 0x548 <LCD_init+0xc4>
     53c:	09 c0       	rjmp	.+18     	; 0x550 <LCD_init+0xcc>
     53e:	68 e2       	ldi	r22, 0x28	; 40
     540:	8c 2f       	mov	r24, r28
     542:	0e 94 90 00 	call	0x120	; 0x120 <LCD_WriteInstruction>
     546:	04 c0       	rjmp	.+8      	; 0x550 <LCD_init+0xcc>
     548:	6c e2       	ldi	r22, 0x2C	; 44
     54a:	8c 2f       	mov	r24, r28
     54c:	0e 94 90 00 	call	0x120	; 0x120 <LCD_WriteInstruction>
     550:	f8 01       	movw	r30, r16
     552:	e2 57       	subi	r30, 0x72	; 114
     554:	ff 4f       	sbci	r31, 0xFF	; 255
     556:	60 81       	ld	r22, Z
     558:	8c 2f       	mov	r24, r28
     55a:	0e 94 90 00 	call	0x120	; 0x120 <LCD_WriteInstruction>
     55e:	61 e0       	ldi	r22, 0x01	; 1
     560:	8c 2f       	mov	r24, r28
     562:	0e 94 90 00 	call	0x120	; 0x120 <LCD_WriteInstruction>
     566:	8f ec       	ldi	r24, 0xCF	; 207
     568:	97 e0       	ldi	r25, 0x07	; 7
     56a:	01 97       	sbiw	r24, 0x01	; 1
     56c:	f1 f7       	brne	.-4      	; 0x56a <LCD_init+0xe6>
     56e:	00 c0       	rjmp	.+0      	; 0x570 <LCD_init+0xec>
     570:	00 00       	nop
     572:	f8 01       	movw	r30, r16
     574:	e5 57       	subi	r30, 0x75	; 117
     576:	ff 4f       	sbci	r31, 0xFF	; 255
     578:	60 81       	ld	r22, Z
     57a:	8c 2f       	mov	r24, r28
     57c:	0e 94 90 00 	call	0x120	; 0x120 <LCD_WriteInstruction>
     580:	cf 5f       	subi	r28, 0xFF	; 255
     582:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <LCDNum>
     586:	c8 17       	cp	r28, r24
     588:	08 f4       	brcc	.+2      	; 0x58c <LCD_init+0x108>
     58a:	8c cf       	rjmp	.-232    	; 0x4a4 <LCD_init+0x20>
     58c:	cf 91       	pop	r28
     58e:	1f 91       	pop	r17
     590:	0f 91       	pop	r16
     592:	08 95       	ret

00000594 <LCD_SetCursor>:
     594:	28 2f       	mov	r18, r24
     596:	30 e0       	ldi	r19, 0x00	; 0
     598:	f9 01       	movw	r30, r18
     59a:	ee 0f       	add	r30, r30
     59c:	ff 1f       	adc	r31, r31
     59e:	22 0f       	add	r18, r18
     5a0:	33 1f       	adc	r19, r19
     5a2:	22 0f       	add	r18, r18
     5a4:	33 1f       	adc	r19, r19
     5a6:	22 0f       	add	r18, r18
     5a8:	33 1f       	adc	r19, r19
     5aa:	e2 0f       	add	r30, r18
     5ac:	f3 1f       	adc	r31, r19
     5ae:	e8 59       	subi	r30, 0x98	; 152
     5b0:	fe 4f       	sbci	r31, 0xFE	; 254
     5b2:	60 87       	std	Z+8, r22	; 0x08
     5b4:	41 87       	std	Z+9, r20	; 0x09
     5b6:	61 30       	cpi	r22, 0x01	; 1
     5b8:	59 f0       	breq	.+22     	; 0x5d0 <LCD_SetCursor+0x3c>
     5ba:	28 f0       	brcs	.+10     	; 0x5c6 <LCD_SetCursor+0x32>
     5bc:	62 30       	cpi	r22, 0x02	; 2
     5be:	69 f0       	breq	.+26     	; 0x5da <LCD_SetCursor+0x46>
     5c0:	63 30       	cpi	r22, 0x03	; 3
     5c2:	91 f0       	breq	.+36     	; 0x5e8 <LCD_SetCursor+0x54>
     5c4:	08 95       	ret
     5c6:	64 2f       	mov	r22, r20
     5c8:	60 68       	ori	r22, 0x80	; 128
     5ca:	0e 94 90 00 	call	0x120	; 0x120 <LCD_WriteInstruction>
     5ce:	08 95       	ret
     5d0:	64 2f       	mov	r22, r20
     5d2:	60 6c       	ori	r22, 0xC0	; 192
     5d4:	0e 94 90 00 	call	0x120	; 0x120 <LCD_WriteInstruction>
     5d8:	08 95       	ret
     5da:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     5de:	64 0f       	add	r22, r20
     5e0:	60 68       	ori	r22, 0x80	; 128
     5e2:	0e 94 90 00 	call	0x120	; 0x120 <LCD_WriteInstruction>
     5e6:	08 95       	ret
     5e8:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     5ec:	64 0f       	add	r22, r20
     5ee:	60 6c       	ori	r22, 0xC0	; 192
     5f0:	0e 94 90 00 	call	0x120	; 0x120 <LCD_WriteInstruction>
     5f4:	08 95       	ret

000005f6 <LCD_WriteChar>:
     5f6:	cf 93       	push	r28
     5f8:	c8 2f       	mov	r28, r24
     5fa:	0e 94 33 01 	call	0x266	; 0x266 <LCD_WriteData>
     5fe:	8c 2f       	mov	r24, r28
     600:	90 e0       	ldi	r25, 0x00	; 0
     602:	fc 01       	movw	r30, r24
     604:	ee 0f       	add	r30, r30
     606:	ff 1f       	adc	r31, r31
     608:	88 0f       	add	r24, r24
     60a:	99 1f       	adc	r25, r25
     60c:	88 0f       	add	r24, r24
     60e:	99 1f       	adc	r25, r25
     610:	88 0f       	add	r24, r24
     612:	99 1f       	adc	r25, r25
     614:	e8 0f       	add	r30, r24
     616:	f9 1f       	adc	r31, r25
     618:	e8 59       	subi	r30, 0x98	; 152
     61a:	fe 4f       	sbci	r31, 0xFE	; 254
     61c:	81 85       	ldd	r24, Z+9	; 0x09
     61e:	8f 5f       	subi	r24, 0xFF	; 255
     620:	81 87       	std	Z+9, r24	; 0x09
     622:	cf 91       	pop	r28
     624:	08 95       	ret

00000626 <LCD_WriteString>:
     626:	0f 93       	push	r16
     628:	1f 93       	push	r17
     62a:	cf 93       	push	r28
     62c:	df 93       	push	r29
     62e:	61 15       	cp	r22, r1
     630:	71 05       	cpc	r23, r1
     632:	31 f4       	brne	.+12     	; 0x640 <LCD_WriteString+0x1a>
     634:	0e c0       	rjmp	.+28     	; 0x652 <LCD_WriteString+0x2c>
     636:	8d 2f       	mov	r24, r29
     638:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <LCD_WriteChar>
     63c:	cf 5f       	subi	r28, 0xFF	; 255
     63e:	03 c0       	rjmp	.+6      	; 0x646 <LCD_WriteString+0x20>
     640:	8b 01       	movw	r16, r22
     642:	d8 2f       	mov	r29, r24
     644:	c0 e0       	ldi	r28, 0x00	; 0
     646:	f8 01       	movw	r30, r16
     648:	ec 0f       	add	r30, r28
     64a:	f1 1d       	adc	r31, r1
     64c:	60 81       	ld	r22, Z
     64e:	61 11       	cpse	r22, r1
     650:	f2 cf       	rjmp	.-28     	; 0x636 <LCD_WriteString+0x10>
     652:	df 91       	pop	r29
     654:	cf 91       	pop	r28
     656:	1f 91       	pop	r17
     658:	0f 91       	pop	r16
     65a:	08 95       	ret

0000065c <LCD_WriteIntegerNumber>:
     65c:	cf 92       	push	r12
     65e:	df 92       	push	r13
     660:	ef 92       	push	r14
     662:	ff 92       	push	r15
     664:	0f 93       	push	r16
     666:	1f 93       	push	r17
     668:	cf 93       	push	r28
     66a:	df 93       	push	r29
     66c:	cd b7       	in	r28, 0x3d	; 61
     66e:	de b7       	in	r29, 0x3e	; 62
     670:	60 97       	sbiw	r28, 0x10	; 16
     672:	0f b6       	in	r0, 0x3f	; 63
     674:	f8 94       	cli
     676:	de bf       	out	0x3e, r29	; 62
     678:	0f be       	out	0x3f, r0	; 63
     67a:	cd bf       	out	0x3d, r28	; 61
     67c:	08 2f       	mov	r16, r24
     67e:	6a 01       	movw	r12, r20
     680:	7b 01       	movw	r14, r22
     682:	41 15       	cp	r20, r1
     684:	51 05       	cpc	r21, r1
     686:	61 05       	cpc	r22, r1
     688:	71 05       	cpc	r23, r1
     68a:	21 f4       	brne	.+8      	; 0x694 <LCD_WriteIntegerNumber+0x38>
     68c:	60 e3       	ldi	r22, 0x30	; 48
     68e:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <LCD_WriteChar>
     692:	3c c0       	rjmp	.+120    	; 0x70c <LCD_WriteIntegerNumber+0xb0>
     694:	77 23       	and	r23, r23
     696:	5c f4       	brge	.+22     	; 0x6ae <LCD_WriteIntegerNumber+0x52>
     698:	6d e2       	ldi	r22, 0x2D	; 45
     69a:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <LCD_WriteChar>
     69e:	f0 94       	com	r15
     6a0:	e0 94       	com	r14
     6a2:	d0 94       	com	r13
     6a4:	c0 94       	com	r12
     6a6:	c1 1c       	adc	r12, r1
     6a8:	d1 1c       	adc	r13, r1
     6aa:	e1 1c       	adc	r14, r1
     6ac:	f1 1c       	adc	r15, r1
     6ae:	10 e0       	ldi	r17, 0x00	; 0
     6b0:	15 c0       	rjmp	.+42     	; 0x6dc <LCD_WriteIntegerNumber+0x80>
     6b2:	c7 01       	movw	r24, r14
     6b4:	b6 01       	movw	r22, r12
     6b6:	2a e0       	ldi	r18, 0x0A	; 10
     6b8:	30 e0       	ldi	r19, 0x00	; 0
     6ba:	40 e0       	ldi	r20, 0x00	; 0
     6bc:	50 e0       	ldi	r21, 0x00	; 0
     6be:	0e 94 3e 0a 	call	0x147c	; 0x147c <__divmodsi4>
     6c2:	e1 e0       	ldi	r30, 0x01	; 1
     6c4:	f0 e0       	ldi	r31, 0x00	; 0
     6c6:	ec 0f       	add	r30, r28
     6c8:	fd 1f       	adc	r31, r29
     6ca:	e1 0f       	add	r30, r17
     6cc:	f1 1d       	adc	r31, r1
     6ce:	60 5d       	subi	r22, 0xD0	; 208
     6d0:	60 83       	st	Z, r22
     6d2:	c2 2e       	mov	r12, r18
     6d4:	d3 2e       	mov	r13, r19
     6d6:	e4 2e       	mov	r14, r20
     6d8:	f5 2e       	mov	r15, r21
     6da:	1f 5f       	subi	r17, 0xFF	; 255
     6dc:	c1 14       	cp	r12, r1
     6de:	d1 04       	cpc	r13, r1
     6e0:	e1 04       	cpc	r14, r1
     6e2:	f1 04       	cpc	r15, r1
     6e4:	31 f7       	brne	.-52     	; 0x6b2 <LCD_WriteIntegerNumber+0x56>
     6e6:	ff 24       	eor	r15, r15
     6e8:	fa 94       	dec	r15
     6ea:	f1 0e       	add	r15, r17
     6ec:	0d c0       	rjmp	.+26     	; 0x708 <LCD_WriteIntegerNumber+0xac>
     6ee:	e1 e0       	ldi	r30, 0x01	; 1
     6f0:	f0 e0       	ldi	r31, 0x00	; 0
     6f2:	ec 0f       	add	r30, r28
     6f4:	fd 1f       	adc	r31, r29
     6f6:	ef 0d       	add	r30, r15
     6f8:	f1 1d       	adc	r31, r1
     6fa:	f7 fc       	sbrc	r15, 7
     6fc:	fa 95       	dec	r31
     6fe:	60 81       	ld	r22, Z
     700:	80 2f       	mov	r24, r16
     702:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <LCD_WriteChar>
     706:	fa 94       	dec	r15
     708:	ff 20       	and	r15, r15
     70a:	8c f7       	brge	.-30     	; 0x6ee <LCD_WriteIntegerNumber+0x92>
     70c:	60 96       	adiw	r28, 0x10	; 16
     70e:	0f b6       	in	r0, 0x3f	; 63
     710:	f8 94       	cli
     712:	de bf       	out	0x3e, r29	; 62
     714:	0f be       	out	0x3f, r0	; 63
     716:	cd bf       	out	0x3d, r28	; 61
     718:	df 91       	pop	r29
     71a:	cf 91       	pop	r28
     71c:	1f 91       	pop	r17
     71e:	0f 91       	pop	r16
     720:	ff 90       	pop	r15
     722:	ef 90       	pop	r14
     724:	df 90       	pop	r13
     726:	cf 90       	pop	r12
     728:	08 95       	ret

0000072a <LCD_WriteFloatNumber>:
     72a:	cf 92       	push	r12
     72c:	df 92       	push	r13
     72e:	ef 92       	push	r14
     730:	ff 92       	push	r15
     732:	cf 93       	push	r28
     734:	c8 2f       	mov	r28, r24
     736:	6a 01       	movw	r12, r20
     738:	7b 01       	movw	r14, r22
     73a:	cb 01       	movw	r24, r22
     73c:	ba 01       	movw	r22, r20
     73e:	0e 94 c7 08 	call	0x118e	; 0x118e <__fixsfsi>
     742:	ab 01       	movw	r20, r22
     744:	bc 01       	movw	r22, r24
     746:	8c 2f       	mov	r24, r28
     748:	0e 94 2e 03 	call	0x65c	; 0x65c <LCD_WriteIntegerNumber>
     74c:	20 e0       	ldi	r18, 0x00	; 0
     74e:	30 e0       	ldi	r19, 0x00	; 0
     750:	a9 01       	movw	r20, r18
     752:	c7 01       	movw	r24, r14
     754:	b6 01       	movw	r22, r12
     756:	0e 94 c2 08 	call	0x1184	; 0x1184 <__cmpsf2>
     75a:	88 23       	and	r24, r24
     75c:	24 f4       	brge	.+8      	; 0x766 <LCD_WriteFloatNumber+0x3c>
     75e:	f7 fa       	bst	r15, 7
     760:	f0 94       	com	r15
     762:	f7 f8       	bld	r15, 7
     764:	f0 94       	com	r15
     766:	6e e2       	ldi	r22, 0x2E	; 46
     768:	8c 2f       	mov	r24, r28
     76a:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <LCD_WriteChar>
     76e:	c7 01       	movw	r24, r14
     770:	b6 01       	movw	r22, r12
     772:	0e 94 c7 08 	call	0x118e	; 0x118e <__fixsfsi>
     776:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__floatsisf>
     77a:	9b 01       	movw	r18, r22
     77c:	ac 01       	movw	r20, r24
     77e:	c7 01       	movw	r24, r14
     780:	b6 01       	movw	r22, r12
     782:	0e 94 55 08 	call	0x10aa	; 0x10aa <__subsf3>
     786:	20 e0       	ldi	r18, 0x00	; 0
     788:	30 e0       	ldi	r19, 0x00	; 0
     78a:	48 ec       	ldi	r20, 0xC8	; 200
     78c:	52 e4       	ldi	r21, 0x42	; 66
     78e:	0e 94 af 09 	call	0x135e	; 0x135e <__mulsf3>
     792:	0e 94 c7 08 	call	0x118e	; 0x118e <__fixsfsi>
     796:	ab 01       	movw	r20, r22
     798:	bc 01       	movw	r22, r24
     79a:	8c 2f       	mov	r24, r28
     79c:	0e 94 2e 03 	call	0x65c	; 0x65c <LCD_WriteIntegerNumber>
     7a0:	cf 91       	pop	r28
     7a2:	ff 90       	pop	r15
     7a4:	ef 90       	pop	r14
     7a6:	df 90       	pop	r13
     7a8:	cf 90       	pop	r12
     7aa:	08 95       	ret

000007ac <LCD_WriteBinary>:
     7ac:	1f 93       	push	r17
     7ae:	cf 93       	push	r28
     7b0:	df 93       	push	r29
     7b2:	18 2f       	mov	r17, r24
     7b4:	d6 2f       	mov	r29, r22
     7b6:	c0 e0       	ldi	r28, 0x00	; 0
     7b8:	11 c0       	rjmp	.+34     	; 0x7dc <LCD_WriteBinary+0x30>
     7ba:	87 e0       	ldi	r24, 0x07	; 7
     7bc:	90 e0       	ldi	r25, 0x00	; 0
     7be:	8c 1b       	sub	r24, r28
     7c0:	91 09       	sbc	r25, r1
     7c2:	6d 2f       	mov	r22, r29
     7c4:	70 e0       	ldi	r23, 0x00	; 0
     7c6:	02 c0       	rjmp	.+4      	; 0x7cc <LCD_WriteBinary+0x20>
     7c8:	75 95       	asr	r23
     7ca:	67 95       	ror	r22
     7cc:	8a 95       	dec	r24
     7ce:	e2 f7       	brpl	.-8      	; 0x7c8 <LCD_WriteBinary+0x1c>
     7d0:	61 70       	andi	r22, 0x01	; 1
     7d2:	60 5d       	subi	r22, 0xD0	; 208
     7d4:	81 2f       	mov	r24, r17
     7d6:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <LCD_WriteChar>
     7da:	cf 5f       	subi	r28, 0xFF	; 255
     7dc:	c8 30       	cpi	r28, 0x08	; 8
     7de:	68 f3       	brcs	.-38     	; 0x7ba <LCD_WriteBinary+0xe>
     7e0:	df 91       	pop	r29
     7e2:	cf 91       	pop	r28
     7e4:	1f 91       	pop	r17
     7e6:	08 95       	ret

000007e8 <LCD_WriteHexa>:
     7e8:	1f 93       	push	r17
     7ea:	cf 93       	push	r28
     7ec:	df 93       	push	r29
     7ee:	d8 2f       	mov	r29, r24
     7f0:	16 2f       	mov	r17, r22
     7f2:	12 95       	swap	r17
     7f4:	1f 70       	andi	r17, 0x0F	; 15
     7f6:	c6 2f       	mov	r28, r22
     7f8:	cf 70       	andi	r28, 0x0F	; 15
     7fa:	60 e3       	ldi	r22, 0x30	; 48
     7fc:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <LCD_WriteChar>
     800:	68 e5       	ldi	r22, 0x58	; 88
     802:	8d 2f       	mov	r24, r29
     804:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <LCD_WriteChar>
     808:	1a 30       	cpi	r17, 0x0A	; 10
     80a:	30 f4       	brcc	.+12     	; 0x818 <__DATA_REGION_LENGTH__+0x18>
     80c:	60 e3       	ldi	r22, 0x30	; 48
     80e:	61 0f       	add	r22, r17
     810:	8d 2f       	mov	r24, r29
     812:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <LCD_WriteChar>
     816:	05 c0       	rjmp	.+10     	; 0x822 <__DATA_REGION_LENGTH__+0x22>
     818:	67 e3       	ldi	r22, 0x37	; 55
     81a:	61 0f       	add	r22, r17
     81c:	8d 2f       	mov	r24, r29
     81e:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <LCD_WriteChar>
     822:	ca 30       	cpi	r28, 0x0A	; 10
     824:	30 f4       	brcc	.+12     	; 0x832 <__DATA_REGION_LENGTH__+0x32>
     826:	60 e3       	ldi	r22, 0x30	; 48
     828:	6c 0f       	add	r22, r28
     82a:	8d 2f       	mov	r24, r29
     82c:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <LCD_WriteChar>
     830:	05 c0       	rjmp	.+10     	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
     832:	67 e3       	ldi	r22, 0x37	; 55
     834:	6c 0f       	add	r22, r28
     836:	8d 2f       	mov	r24, r29
     838:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <LCD_WriteChar>
     83c:	df 91       	pop	r29
     83e:	cf 91       	pop	r28
     840:	1f 91       	pop	r17
     842:	08 95       	ret

00000844 <LCD_CursorPosition>:
     844:	90 e0       	ldi	r25, 0x00	; 0
     846:	fc 01       	movw	r30, r24
     848:	ee 0f       	add	r30, r30
     84a:	ff 1f       	adc	r31, r31
     84c:	88 0f       	add	r24, r24
     84e:	99 1f       	adc	r25, r25
     850:	88 0f       	add	r24, r24
     852:	99 1f       	adc	r25, r25
     854:	88 0f       	add	r24, r24
     856:	99 1f       	adc	r25, r25
     858:	e8 0f       	add	r30, r24
     85a:	f9 1f       	adc	r31, r25
     85c:	e8 59       	subi	r30, 0x98	; 152
     85e:	fe 4f       	sbci	r31, 0xFE	; 254
     860:	80 85       	ldd	r24, Z+8	; 0x08
     862:	db 01       	movw	r26, r22
     864:	8c 93       	st	X, r24
     866:	81 85       	ldd	r24, Z+9	; 0x09
     868:	fa 01       	movw	r30, r20
     86a:	80 83       	st	Z, r24
     86c:	08 95       	ret

0000086e <LCD_Printf>:



u8 LCD_Printf(LCD_Number_t lcdnum,u8*str, ...)
{
     86e:	af 92       	push	r10
     870:	bf 92       	push	r11
     872:	cf 92       	push	r12
     874:	df 92       	push	r13
     876:	ef 92       	push	r14
     878:	ff 92       	push	r15
     87a:	0f 93       	push	r16
     87c:	1f 93       	push	r17
     87e:	cf 93       	push	r28
     880:	df 93       	push	r29
     882:	00 d0       	rcall	.+0      	; 0x884 <LCD_Printf+0x16>
     884:	cd b7       	in	r28, 0x3d	; 61
     886:	de b7       	in	r29, 0x3e	; 62
     888:	0f 85       	ldd	r16, Y+15	; 0x0f
     88a:	e8 88       	ldd	r14, Y+16	; 0x10
     88c:	f9 88       	ldd	r15, Y+17	; 0x11
	u8 i=0;
	LCD_Line_t linee=0;
     88e:	19 82       	std	Y+1, r1	; 0x01
	LCD_Cell_t Celll=0;
     890:	1a 82       	std	Y+2, r1	; 0x02
	
	Arguments_List_t mylist;
	Start_Arguments_List_Func(mylist,str);
     892:	6e 01       	movw	r12, r28
     894:	82 e1       	ldi	r24, 0x12	; 18
     896:	c8 0e       	add	r12, r24
     898:	d1 1c       	adc	r13, r1



u8 LCD_Printf(LCD_Number_t lcdnum,u8*str, ...)
{
	u8 i=0;
     89a:	10 e0       	ldi	r17, 0x00	; 0
	LCD_Cell_t Celll=0;
	
	Arguments_List_t mylist;
	Start_Arguments_List_Func(mylist,str);
	
	while(str[i])
     89c:	ff c0       	rjmp	.+510    	; 0xa9c <LCD_Printf+0x22e>
	{
		if (str[i]=='%')
     89e:	65 32       	cpi	r22, 0x25	; 37
     8a0:	09 f0       	breq	.+2      	; 0x8a4 <LCD_Printf+0x36>
     8a2:	c8 c0       	rjmp	.+400    	; 0xa34 <LCD_Printf+0x1c6>
		{
			i++;
     8a4:	1f 5f       	subi	r17, 0xFF	; 255
			switch(str[i])
     8a6:	f7 01       	movw	r30, r14
     8a8:	e1 0f       	add	r30, r17
     8aa:	f1 1d       	adc	r31, r1
     8ac:	60 81       	ld	r22, Z
     8ae:	86 2f       	mov	r24, r22
     8b0:	90 e0       	ldi	r25, 0x00	; 0
     8b2:	fc 01       	movw	r30, r24
     8b4:	e2 54       	subi	r30, 0x42	; 66
     8b6:	f1 09       	sbc	r31, r1
     8b8:	e7 33       	cpi	r30, 0x37	; 55
     8ba:	f1 05       	cpc	r31, r1
     8bc:	08 f0       	brcs	.+2      	; 0x8c0 <LCD_Printf+0x52>
     8be:	b6 c0       	rjmp	.+364    	; 0xa2c <LCD_Printf+0x1be>
     8c0:	e6 5d       	subi	r30, 0xD6	; 214
     8c2:	ff 4f       	sbci	r31, 0xFF	; 255
     8c4:	0c 94 5d 0a 	jmp	0x14ba	; 0x14ba <__tablejump2__>
			{
				case 'd' :
				LCD_WriteIntegerNumber(lcdnum,Take_Argument_FromList_Func(mylist,s16));
     8c8:	56 01       	movw	r10, r12
     8ca:	e2 e0       	ldi	r30, 0x02	; 2
     8cc:	ae 0e       	add	r10, r30
     8ce:	b1 1c       	adc	r11, r1
     8d0:	f6 01       	movw	r30, r12
     8d2:	40 81       	ld	r20, Z
     8d4:	51 81       	ldd	r21, Z+1	; 0x01
     8d6:	05 2e       	mov	r0, r21
     8d8:	00 0c       	add	r0, r0
     8da:	66 0b       	sbc	r22, r22
     8dc:	77 0b       	sbc	r23, r23
     8de:	80 2f       	mov	r24, r16
     8e0:	0e 94 2e 03 	call	0x65c	; 0x65c <LCD_WriteIntegerNumber>
     8e4:	65 01       	movw	r12, r10
				break;
     8e6:	d9 c0       	rjmp	.+434    	; 0xa9a <LCD_Printf+0x22c>
				case 'D' :
				LCD_WriteIntegerNumber(lcdnum,Take_Argument_FromList_Func(mylist,s16));
     8e8:	56 01       	movw	r10, r12
     8ea:	f2 e0       	ldi	r31, 0x02	; 2
     8ec:	af 0e       	add	r10, r31
     8ee:	b1 1c       	adc	r11, r1
     8f0:	f6 01       	movw	r30, r12
     8f2:	40 81       	ld	r20, Z
     8f4:	51 81       	ldd	r21, Z+1	; 0x01
     8f6:	05 2e       	mov	r0, r21
     8f8:	00 0c       	add	r0, r0
     8fa:	66 0b       	sbc	r22, r22
     8fc:	77 0b       	sbc	r23, r23
     8fe:	80 2f       	mov	r24, r16
     900:	0e 94 2e 03 	call	0x65c	; 0x65c <LCD_WriteIntegerNumber>
     904:	65 01       	movw	r12, r10
				break;
     906:	c9 c0       	rjmp	.+402    	; 0xa9a <LCD_Printf+0x22c>
				
				case 'c' :
				LCD_WriteChar(lcdnum,(u8)Take_Argument_FromList_Func(mylist,u16));
     908:	56 01       	movw	r10, r12
     90a:	f2 e0       	ldi	r31, 0x02	; 2
     90c:	af 0e       	add	r10, r31
     90e:	b1 1c       	adc	r11, r1
     910:	f6 01       	movw	r30, r12
     912:	60 81       	ld	r22, Z
     914:	80 2f       	mov	r24, r16
     916:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <LCD_WriteChar>
     91a:	65 01       	movw	r12, r10
				break;
     91c:	be c0       	rjmp	.+380    	; 0xa9a <LCD_Printf+0x22c>
				case 'C' :
				LCD_WriteChar(lcdnum,(u8)Take_Argument_FromList_Func(mylist,u16));
     91e:	56 01       	movw	r10, r12
     920:	f2 e0       	ldi	r31, 0x02	; 2
     922:	af 0e       	add	r10, r31
     924:	b1 1c       	adc	r11, r1
     926:	f6 01       	movw	r30, r12
     928:	60 81       	ld	r22, Z
     92a:	80 2f       	mov	r24, r16
     92c:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <LCD_WriteChar>
     930:	65 01       	movw	r12, r10
				break;
     932:	b3 c0       	rjmp	.+358    	; 0xa9a <LCD_Printf+0x22c>
				
				case 's':
				LCD_WriteString(lcdnum,(u8*)Take_Argument_FromList_Func(mylist,u8*));
     934:	56 01       	movw	r10, r12
     936:	f2 e0       	ldi	r31, 0x02	; 2
     938:	af 0e       	add	r10, r31
     93a:	b1 1c       	adc	r11, r1
     93c:	f6 01       	movw	r30, r12
     93e:	60 81       	ld	r22, Z
     940:	71 81       	ldd	r23, Z+1	; 0x01
     942:	80 2f       	mov	r24, r16
     944:	0e 94 13 03 	call	0x626	; 0x626 <LCD_WriteString>
     948:	65 01       	movw	r12, r10
				break;
     94a:	a7 c0       	rjmp	.+334    	; 0xa9a <LCD_Printf+0x22c>
				case 'S':
				LCD_WriteString(lcdnum,(u8*)Take_Argument_FromList_Func(mylist,u8*));
     94c:	56 01       	movw	r10, r12
     94e:	f2 e0       	ldi	r31, 0x02	; 2
     950:	af 0e       	add	r10, r31
     952:	b1 1c       	adc	r11, r1
     954:	f6 01       	movw	r30, r12
     956:	60 81       	ld	r22, Z
     958:	71 81       	ldd	r23, Z+1	; 0x01
     95a:	80 2f       	mov	r24, r16
     95c:	0e 94 13 03 	call	0x626	; 0x626 <LCD_WriteString>
     960:	65 01       	movw	r12, r10
				break;
     962:	9b c0       	rjmp	.+310    	; 0xa9a <LCD_Printf+0x22c>
				
				case 'f':
				LCD_WriteFloatNumber(lcdnum,Take_Argument_FromList_Func(mylist,f64));
     964:	56 01       	movw	r10, r12
     966:	f4 e0       	ldi	r31, 0x04	; 4
     968:	af 0e       	add	r10, r31
     96a:	b1 1c       	adc	r11, r1
     96c:	f6 01       	movw	r30, r12
     96e:	40 81       	ld	r20, Z
     970:	51 81       	ldd	r21, Z+1	; 0x01
     972:	62 81       	ldd	r22, Z+2	; 0x02
     974:	73 81       	ldd	r23, Z+3	; 0x03
     976:	80 2f       	mov	r24, r16
     978:	0e 94 95 03 	call	0x72a	; 0x72a <LCD_WriteFloatNumber>
     97c:	65 01       	movw	r12, r10
				break;
     97e:	8d c0       	rjmp	.+282    	; 0xa9a <LCD_Printf+0x22c>
				case 'F':
				LCD_WriteFloatNumber(lcdnum,Take_Argument_FromList_Func(mylist,f64));
     980:	56 01       	movw	r10, r12
     982:	f4 e0       	ldi	r31, 0x04	; 4
     984:	af 0e       	add	r10, r31
     986:	b1 1c       	adc	r11, r1
     988:	f6 01       	movw	r30, r12
     98a:	40 81       	ld	r20, Z
     98c:	51 81       	ldd	r21, Z+1	; 0x01
     98e:	62 81       	ldd	r22, Z+2	; 0x02
     990:	73 81       	ldd	r23, Z+3	; 0x03
     992:	80 2f       	mov	r24, r16
     994:	0e 94 95 03 	call	0x72a	; 0x72a <LCD_WriteFloatNumber>
     998:	65 01       	movw	r12, r10
				break;
     99a:	7f c0       	rjmp	.+254    	; 0xa9a <LCD_Printf+0x22c>
				
				case 'u':
				LCD_WriteIntegerNumber(lcdnum,Take_Argument_FromList_Func(mylist,u16));
     99c:	56 01       	movw	r10, r12
     99e:	f2 e0       	ldi	r31, 0x02	; 2
     9a0:	af 0e       	add	r10, r31
     9a2:	b1 1c       	adc	r11, r1
     9a4:	f6 01       	movw	r30, r12
     9a6:	40 81       	ld	r20, Z
     9a8:	51 81       	ldd	r21, Z+1	; 0x01
     9aa:	60 e0       	ldi	r22, 0x00	; 0
     9ac:	70 e0       	ldi	r23, 0x00	; 0
     9ae:	80 2f       	mov	r24, r16
     9b0:	0e 94 2e 03 	call	0x65c	; 0x65c <LCD_WriteIntegerNumber>
     9b4:	65 01       	movw	r12, r10
				break;
     9b6:	71 c0       	rjmp	.+226    	; 0xa9a <LCD_Printf+0x22c>
				case 'U':
				LCD_WriteIntegerNumber(lcdnum,Take_Argument_FromList_Func(mylist,u16));
     9b8:	56 01       	movw	r10, r12
     9ba:	f2 e0       	ldi	r31, 0x02	; 2
     9bc:	af 0e       	add	r10, r31
     9be:	b1 1c       	adc	r11, r1
     9c0:	f6 01       	movw	r30, r12
     9c2:	40 81       	ld	r20, Z
     9c4:	51 81       	ldd	r21, Z+1	; 0x01
     9c6:	60 e0       	ldi	r22, 0x00	; 0
     9c8:	70 e0       	ldi	r23, 0x00	; 0
     9ca:	80 2f       	mov	r24, r16
     9cc:	0e 94 2e 03 	call	0x65c	; 0x65c <LCD_WriteIntegerNumber>
     9d0:	65 01       	movw	r12, r10
				break;
     9d2:	63 c0       	rjmp	.+198    	; 0xa9a <LCD_Printf+0x22c>
				
				case 'b':
				LCD_WriteBinary(lcdnum,Take_Argument_FromList_Func(mylist,u16));
     9d4:	56 01       	movw	r10, r12
     9d6:	f2 e0       	ldi	r31, 0x02	; 2
     9d8:	af 0e       	add	r10, r31
     9da:	b1 1c       	adc	r11, r1
     9dc:	f6 01       	movw	r30, r12
     9de:	60 81       	ld	r22, Z
     9e0:	80 2f       	mov	r24, r16
     9e2:	0e 94 d6 03 	call	0x7ac	; 0x7ac <LCD_WriteBinary>
     9e6:	65 01       	movw	r12, r10
				break;
     9e8:	58 c0       	rjmp	.+176    	; 0xa9a <LCD_Printf+0x22c>
				case 'B':
				LCD_WriteBinary(lcdnum,Take_Argument_FromList_Func(mylist,u16));
     9ea:	56 01       	movw	r10, r12
     9ec:	f2 e0       	ldi	r31, 0x02	; 2
     9ee:	af 0e       	add	r10, r31
     9f0:	b1 1c       	adc	r11, r1
     9f2:	f6 01       	movw	r30, r12
     9f4:	60 81       	ld	r22, Z
     9f6:	80 2f       	mov	r24, r16
     9f8:	0e 94 d6 03 	call	0x7ac	; 0x7ac <LCD_WriteBinary>
     9fc:	65 01       	movw	r12, r10
				break;
     9fe:	4d c0       	rjmp	.+154    	; 0xa9a <LCD_Printf+0x22c>
				
				case 'x':
				LCD_WriteHexa(lcdnum,Take_Argument_FromList_Func(mylist,u16));
     a00:	56 01       	movw	r10, r12
     a02:	f2 e0       	ldi	r31, 0x02	; 2
     a04:	af 0e       	add	r10, r31
     a06:	b1 1c       	adc	r11, r1
     a08:	f6 01       	movw	r30, r12
     a0a:	60 81       	ld	r22, Z
     a0c:	80 2f       	mov	r24, r16
     a0e:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <LCD_WriteHexa>
     a12:	65 01       	movw	r12, r10
				break;
     a14:	42 c0       	rjmp	.+132    	; 0xa9a <LCD_Printf+0x22c>
				case 'X':
				LCD_WriteHexa(lcdnum,Take_Argument_FromList_Func(mylist,u16));
     a16:	56 01       	movw	r10, r12
     a18:	f2 e0       	ldi	r31, 0x02	; 2
     a1a:	af 0e       	add	r10, r31
     a1c:	b1 1c       	adc	r11, r1
     a1e:	f6 01       	movw	r30, r12
     a20:	60 81       	ld	r22, Z
     a22:	80 2f       	mov	r24, r16
     a24:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <LCD_WriteHexa>
     a28:	65 01       	movw	r12, r10
				break;
     a2a:	37 c0       	rjmp	.+110    	; 0xa9a <LCD_Printf+0x22c>
				
				default:
				LCD_WriteChar(lcdnum,str[i]);	
     a2c:	80 2f       	mov	r24, r16
     a2e:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <LCD_WriteChar>
     a32:	33 c0       	rjmp	.+102    	; 0xa9a <LCD_Printf+0x22c>
			}
		}
		else if (str[i]==92)
     a34:	6c 35       	cpi	r22, 0x5C	; 92
     a36:	71 f5       	brne	.+92     	; 0xa94 <LCD_Printf+0x226>
		{
			i++;
     a38:	1f 5f       	subi	r17, 0xFF	; 255
			switch(str[i])
     a3a:	f7 01       	movw	r30, r14
     a3c:	e1 0f       	add	r30, r17
     a3e:	f1 1d       	adc	r31, r1
     a40:	60 81       	ld	r22, Z
     a42:	6e 36       	cpi	r22, 0x6E	; 110
     a44:	19 f0       	breq	.+6      	; 0xa4c <LCD_Printf+0x1de>
     a46:	64 37       	cpi	r22, 0x74	; 116
     a48:	89 f0       	breq	.+34     	; 0xa6c <LCD_Printf+0x1fe>
     a4a:	20 c0       	rjmp	.+64     	; 0xa8c <LCD_Printf+0x21e>
			{
				case 'n' :
			    LCD_CursorPosition(lcdnum,&linee,&Celll);
     a4c:	ae 01       	movw	r20, r28
     a4e:	4e 5f       	subi	r20, 0xFE	; 254
     a50:	5f 4f       	sbci	r21, 0xFF	; 255
     a52:	be 01       	movw	r22, r28
     a54:	6f 5f       	subi	r22, 0xFF	; 255
     a56:	7f 4f       	sbci	r23, 0xFF	; 255
     a58:	80 2f       	mov	r24, r16
     a5a:	0e 94 22 04 	call	0x844	; 0x844 <LCD_CursorPosition>
				LCD_SetCursor(lcdnum,(linee+1),Cell_1);
     a5e:	69 81       	ldd	r22, Y+1	; 0x01
     a60:	6f 5f       	subi	r22, 0xFF	; 255
     a62:	40 e0       	ldi	r20, 0x00	; 0
     a64:	80 2f       	mov	r24, r16
     a66:	0e 94 ca 02 	call	0x594	; 0x594 <LCD_SetCursor>
				break;
     a6a:	17 c0       	rjmp	.+46     	; 0xa9a <LCD_Printf+0x22c>
				case 't' :
				 LCD_CursorPosition(lcdnum,&linee,&Celll);
     a6c:	ae 01       	movw	r20, r28
     a6e:	4e 5f       	subi	r20, 0xFE	; 254
     a70:	5f 4f       	sbci	r21, 0xFF	; 255
     a72:	be 01       	movw	r22, r28
     a74:	6f 5f       	subi	r22, 0xFF	; 255
     a76:	7f 4f       	sbci	r23, 0xFF	; 255
     a78:	80 2f       	mov	r24, r16
     a7a:	0e 94 22 04 	call	0x844	; 0x844 <LCD_CursorPosition>
				 LCD_SetCursor(lcdnum,linee,Celll+4);
     a7e:	4a 81       	ldd	r20, Y+2	; 0x02
     a80:	4c 5f       	subi	r20, 0xFC	; 252
     a82:	69 81       	ldd	r22, Y+1	; 0x01
     a84:	80 2f       	mov	r24, r16
     a86:	0e 94 ca 02 	call	0x594	; 0x594 <LCD_SetCursor>
				break;
     a8a:	07 c0       	rjmp	.+14     	; 0xa9a <LCD_Printf+0x22c>
				
				default:
				LCD_WriteChar(lcdnum,str[i]);
     a8c:	80 2f       	mov	r24, r16
     a8e:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <LCD_WriteChar>
     a92:	03 c0       	rjmp	.+6      	; 0xa9a <LCD_Printf+0x22c>
			}
			
		}
		else
		{
			LCD_WriteChar(lcdnum,str[i]);
     a94:	80 2f       	mov	r24, r16
     a96:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <LCD_WriteChar>
		}
		i++;
     a9a:	1f 5f       	subi	r17, 0xFF	; 255
	LCD_Cell_t Celll=0;
	
	Arguments_List_t mylist;
	Start_Arguments_List_Func(mylist,str);
	
	while(str[i])
     a9c:	f7 01       	movw	r30, r14
     a9e:	e1 0f       	add	r30, r17
     aa0:	f1 1d       	adc	r31, r1
     aa2:	60 81       	ld	r22, Z
     aa4:	61 11       	cpse	r22, r1
     aa6:	fb ce       	rjmp	.-522    	; 0x89e <LCD_Printf+0x30>
	}
	
	Delet_Arguments_List(mylist);
	  
	return i;
}
     aa8:	81 2f       	mov	r24, r17
     aaa:	0f 90       	pop	r0
     aac:	0f 90       	pop	r0
     aae:	df 91       	pop	r29
     ab0:	cf 91       	pop	r28
     ab2:	1f 91       	pop	r17
     ab4:	0f 91       	pop	r16
     ab6:	ff 90       	pop	r15
     ab8:	ef 90       	pop	r14
     aba:	df 90       	pop	r13
     abc:	cf 90       	pop	r12
     abe:	bf 90       	pop	r11
     ac0:	af 90       	pop	r10
     ac2:	08 95       	ret

00000ac4 <SENSORS_Init>:

extern u16 VoltReference;


void SENSORS_Init(void)
{
     ac4:	08 95       	ret

00000ac6 <main>:
 


int main(void)
{
 	DIO_InitDirection();
     ac6:	0e 94 08 07 	call	0xe10	; 0xe10 <DIO_InitDirection>
	LCD_init();
     aca:	0e 94 42 02 	call	0x484	; 0x484 <LCD_init>
	//LED_Init();
	KEYPAD_Init();
     ace:	0e 94 80 00 	call	0x100	; 0x100 <KEYPAD_Init>
	ADC_Init(ADC_VREF_AVCC,ADC_SCALER_64);
     ad2:	66 e0       	ldi	r22, 0x06	; 6
     ad4:	81 e0       	ldi	r24, 0x01	; 1
     ad6:	0e 94 1b 08 	call	0x1036	; 0x1036 <ADC_Init>
   // FILTER_Init();
    SENSORS_Init();
     ada:	0e 94 62 05 	call	0xac4	; 0xac4 <SENSORS_Init>
	//EXI_Init();
	
	u8 i=30;
     ade:	ce e1       	ldi	r28, 0x1E	; 30
     ae0:	01 c0       	rjmp	.+2      	; 0xae4 <main+0x1e>
	LCD_Printf(LCD3,(u8*)"\\n \\t %c",i);
	
	i++;
	if (i==200)
	{
		i=0;
     ae2:	c0 e0       	ldi	r28, 0x00	; 0
	
	u8 i=30;

	while(1)
	{
		LCD_SetCursor(LCD1,Line1,Cell_1);
     ae4:	40 e0       	ldi	r20, 0x00	; 0
     ae6:	60 e0       	ldi	r22, 0x00	; 0
     ae8:	80 e0       	ldi	r24, 0x00	; 0
     aea:	0e 94 ca 02 	call	0x594	; 0x594 <LCD_SetCursor>
		LCD_SetCursor(LCD2,Line1,Cell_1);
     aee:	40 e0       	ldi	r20, 0x00	; 0
     af0:	60 e0       	ldi	r22, 0x00	; 0
     af2:	81 e0       	ldi	r24, 0x01	; 1
     af4:	0e 94 ca 02 	call	0x594	; 0x594 <LCD_SetCursor>
		LCD_SetCursor(LCD3,Line1,Cell_1);
     af8:	40 e0       	ldi	r20, 0x00	; 0
     afa:	60 e0       	ldi	r22, 0x00	; 0
     afc:	82 e0       	ldi	r24, 0x02	; 2
     afe:	0e 94 ca 02 	call	0x594	; 0x594 <LCD_SetCursor>
		
		
		LCD_Printf(LCD1,(u8*)"My Printf Function : \\n%d %d %u %s",25,-1,-1,(u8*)"Mo7amed");
     b02:	8f ea       	ldi	r24, 0xAF	; 175
     b04:	90 e0       	ldi	r25, 0x00	; 0
     b06:	9f 93       	push	r25
     b08:	8f 93       	push	r24
     b0a:	df ef       	ldi	r29, 0xFF	; 255
     b0c:	df 93       	push	r29
     b0e:	df 93       	push	r29
     b10:	df 93       	push	r29
     b12:	df 93       	push	r29
     b14:	1f 92       	push	r1
     b16:	89 e1       	ldi	r24, 0x19	; 25
     b18:	8f 93       	push	r24
     b1a:	87 eb       	ldi	r24, 0xB7	; 183
     b1c:	90 e0       	ldi	r25, 0x00	; 0
     b1e:	9f 93       	push	r25
     b20:	8f 93       	push	r24
     b22:	1f 92       	push	r1
     b24:	0e 94 37 04 	call	0x86e	; 0x86e <LCD_Printf>
		LCD_Printf(LCD1,(u8*)" \\n %c %c \\t %s %f",'k','m',(u8*)"float",32.5);
     b28:	02 e4       	ldi	r16, 0x42	; 66
     b2a:	0f 93       	push	r16
     b2c:	12 e0       	ldi	r17, 0x02	; 2
     b2e:	1f 93       	push	r17
     b30:	1f 92       	push	r1
     b32:	1f 92       	push	r1
     b34:	8a ed       	ldi	r24, 0xDA	; 218
     b36:	90 e0       	ldi	r25, 0x00	; 0
     b38:	9f 93       	push	r25
     b3a:	8f 93       	push	r24
     b3c:	1f 92       	push	r1
     b3e:	8d e6       	ldi	r24, 0x6D	; 109
     b40:	8f 93       	push	r24
     b42:	1f 92       	push	r1
     b44:	8b e6       	ldi	r24, 0x6B	; 107
     b46:	8f 93       	push	r24
     b48:	80 ee       	ldi	r24, 0xE0	; 224
     b4a:	90 e0       	ldi	r25, 0x00	; 0
     b4c:	9f 93       	push	r25
     b4e:	8f 93       	push	r24
     b50:	1f 92       	push	r1
     b52:	0e 94 37 04 	call	0x86e	; 0x86e <LCD_Printf>
		LCD_Printf(LCD1,(u8*)" \\n %c  \\t %c \\t %C ",'R','A','M');
     b56:	1f 92       	push	r1
     b58:	8d e4       	ldi	r24, 0x4D	; 77
     b5a:	8f 93       	push	r24
     b5c:	1f 92       	push	r1
     b5e:	81 e4       	ldi	r24, 0x41	; 65
     b60:	8f 93       	push	r24
     b62:	1f 92       	push	r1
     b64:	82 e5       	ldi	r24, 0x52	; 82
     b66:	8f 93       	push	r24
     b68:	83 ef       	ldi	r24, 0xF3	; 243
     b6a:	90 e0       	ldi	r25, 0x00	; 0
     b6c:	9f 93       	push	r25
     b6e:	8f 93       	push	r24
     b70:	1f 92       	push	r1
     b72:	0e 94 37 04 	call	0x86e	; 0x86e <LCD_Printf>
		
	
	LCD_Printf(LCD2,"%s: %D \\n %S: %b \\n %s: %X \\n \\t %s: %f",(u8*)"Decimal",-500,(u8*)"Binary",255,(u8*)"Hexa",255,(u8*)"Float",35.5);
     b76:	8d b7       	in	r24, 0x3d	; 61
     b78:	9e b7       	in	r25, 0x3e	; 62
     b7a:	81 96       	adiw	r24, 0x21	; 33
     b7c:	0f b6       	in	r0, 0x3f	; 63
     b7e:	f8 94       	cli
     b80:	9e bf       	out	0x3e, r25	; 62
     b82:	0f be       	out	0x3f, r0	; 63
     b84:	8d bf       	out	0x3d, r24	; 61
     b86:	0f 93       	push	r16
     b88:	8e e0       	ldi	r24, 0x0E	; 14
     b8a:	8f 93       	push	r24
     b8c:	1f 92       	push	r1
     b8e:	1f 92       	push	r1
     b90:	88 e0       	ldi	r24, 0x08	; 8
     b92:	91 e0       	ldi	r25, 0x01	; 1
     b94:	9f 93       	push	r25
     b96:	8f 93       	push	r24
     b98:	1f 92       	push	r1
     b9a:	df 93       	push	r29
     b9c:	8e e0       	ldi	r24, 0x0E	; 14
     b9e:	91 e0       	ldi	r25, 0x01	; 1
     ba0:	9f 93       	push	r25
     ba2:	8f 93       	push	r24
     ba4:	1f 92       	push	r1
     ba6:	df 93       	push	r29
     ba8:	83 e1       	ldi	r24, 0x13	; 19
     baa:	91 e0       	ldi	r25, 0x01	; 1
     bac:	9f 93       	push	r25
     bae:	8f 93       	push	r24
     bb0:	8e ef       	ldi	r24, 0xFE	; 254
     bb2:	8f 93       	push	r24
     bb4:	8c e0       	ldi	r24, 0x0C	; 12
     bb6:	8f 93       	push	r24
     bb8:	8a e1       	ldi	r24, 0x1A	; 26
     bba:	91 e0       	ldi	r25, 0x01	; 1
     bbc:	9f 93       	push	r25
     bbe:	8f 93       	push	r24
     bc0:	82 e2       	ldi	r24, 0x22	; 34
     bc2:	91 e0       	ldi	r25, 0x01	; 1
     bc4:	9f 93       	push	r25
     bc6:	8f 93       	push	r24
     bc8:	81 e0       	ldi	r24, 0x01	; 1
     bca:	8f 93       	push	r24
     bcc:	0e 94 37 04 	call	0x86e	; 0x86e <LCD_Printf>
	
	LCD_Printf(LCD3,(u8*)" %d \\n %X \\n %B \\t ",i,i,i);
     bd0:	1f 92       	push	r1
     bd2:	cf 93       	push	r28
     bd4:	1f 92       	push	r1
     bd6:	cf 93       	push	r28
     bd8:	1f 92       	push	r1
     bda:	cf 93       	push	r28
     bdc:	8a e4       	ldi	r24, 0x4A	; 74
     bde:	91 e0       	ldi	r25, 0x01	; 1
     be0:	9f 93       	push	r25
     be2:	8f 93       	push	r24
     be4:	1f 93       	push	r17
     be6:	0e 94 37 04 	call	0x86e	; 0x86e <LCD_Printf>
	LCD_Printf(LCD3,(u8*)"\\n \\t %c",i);
     bea:	1f 92       	push	r1
     bec:	cf 93       	push	r28
     bee:	8e e5       	ldi	r24, 0x5E	; 94
     bf0:	91 e0       	ldi	r25, 0x01	; 1
     bf2:	9f 93       	push	r25
     bf4:	8f 93       	push	r24
     bf6:	1f 93       	push	r17
     bf8:	0e 94 37 04 	call	0x86e	; 0x86e <LCD_Printf>
	
	i++;
     bfc:	cf 5f       	subi	r28, 0xFF	; 255
	if (i==200)
     bfe:	8d b7       	in	r24, 0x3d	; 61
     c00:	9e b7       	in	r25, 0x3e	; 62
     c02:	83 96       	adiw	r24, 0x23	; 35
     c04:	0f b6       	in	r0, 0x3f	; 63
     c06:	f8 94       	cli
     c08:	9e bf       	out	0x3e, r25	; 62
     c0a:	0f be       	out	0x3f, r0	; 63
     c0c:	8d bf       	out	0x3d, r24	; 61
     c0e:	c8 3c       	cpi	r28, 0xC8	; 200
     c10:	09 f0       	breq	.+2      	; 0xc14 <main+0x14e>
     c12:	68 cf       	rjmp	.-304    	; 0xae4 <main+0x1e>
     c14:	66 cf       	rjmp	.-308    	; 0xae2 <main+0x1c>

00000c16 <DIO_InitPinStstus>:
	else
	{
		localerror=DIO_INVALID_PIN;
	}
	return localerror;
}
     c16:	98 2f       	mov	r25, r24
     c18:	96 95       	lsr	r25
     c1a:	96 95       	lsr	r25
     c1c:	96 95       	lsr	r25
     c1e:	87 70       	andi	r24, 0x07	; 7
     c20:	61 30       	cpi	r22, 0x01	; 1
     c22:	09 f4       	brne	.+2      	; 0xc26 <DIO_InitPinStstus+0x10>
     c24:	55 c0       	rjmp	.+170    	; 0xcd0 <DIO_InitPinStstus+0xba>
     c26:	20 f0       	brcs	.+8      	; 0xc30 <DIO_InitPinStstus+0x1a>
     c28:	62 30       	cpi	r22, 0x02	; 2
     c2a:	09 f4       	brne	.+2      	; 0xc2e <DIO_InitPinStstus+0x18>
     c2c:	a1 c0       	rjmp	.+322    	; 0xd70 <DIO_InitPinStstus+0x15a>
     c2e:	08 95       	ret
     c30:	91 30       	cpi	r25, 0x01	; 1
     c32:	c1 f0       	breq	.+48     	; 0xc64 <DIO_InitPinStstus+0x4e>
     c34:	28 f0       	brcs	.+10     	; 0xc40 <DIO_InitPinStstus+0x2a>
     c36:	92 30       	cpi	r25, 0x02	; 2
     c38:	39 f1       	breq	.+78     	; 0xc88 <DIO_InitPinStstus+0x72>
     c3a:	93 30       	cpi	r25, 0x03	; 3
     c3c:	b9 f1       	breq	.+110    	; 0xcac <DIO_InitPinStstus+0x96>
     c3e:	08 95       	ret
     c40:	4a b3       	in	r20, 0x1a	; 26
     c42:	21 e0       	ldi	r18, 0x01	; 1
     c44:	30 e0       	ldi	r19, 0x00	; 0
     c46:	b9 01       	movw	r22, r18
     c48:	02 c0       	rjmp	.+4      	; 0xc4e <DIO_InitPinStstus+0x38>
     c4a:	66 0f       	add	r22, r22
     c4c:	77 1f       	adc	r23, r23
     c4e:	8a 95       	dec	r24
     c50:	e2 f7       	brpl	.-8      	; 0xc4a <DIO_InitPinStstus+0x34>
     c52:	cb 01       	movw	r24, r22
     c54:	94 2f       	mov	r25, r20
     c56:	98 2b       	or	r25, r24
     c58:	9a bb       	out	0x1a, r25	; 26
     c5a:	9b b3       	in	r25, 0x1b	; 27
     c5c:	80 95       	com	r24
     c5e:	89 23       	and	r24, r25
     c60:	8b bb       	out	0x1b, r24	; 27
     c62:	08 95       	ret
     c64:	47 b3       	in	r20, 0x17	; 23
     c66:	21 e0       	ldi	r18, 0x01	; 1
     c68:	30 e0       	ldi	r19, 0x00	; 0
     c6a:	b9 01       	movw	r22, r18
     c6c:	02 c0       	rjmp	.+4      	; 0xc72 <DIO_InitPinStstus+0x5c>
     c6e:	66 0f       	add	r22, r22
     c70:	77 1f       	adc	r23, r23
     c72:	8a 95       	dec	r24
     c74:	e2 f7       	brpl	.-8      	; 0xc6e <DIO_InitPinStstus+0x58>
     c76:	cb 01       	movw	r24, r22
     c78:	94 2f       	mov	r25, r20
     c7a:	98 2b       	or	r25, r24
     c7c:	97 bb       	out	0x17, r25	; 23
     c7e:	98 b3       	in	r25, 0x18	; 24
     c80:	80 95       	com	r24
     c82:	89 23       	and	r24, r25
     c84:	88 bb       	out	0x18, r24	; 24
     c86:	08 95       	ret
     c88:	44 b3       	in	r20, 0x14	; 20
     c8a:	21 e0       	ldi	r18, 0x01	; 1
     c8c:	30 e0       	ldi	r19, 0x00	; 0
     c8e:	b9 01       	movw	r22, r18
     c90:	02 c0       	rjmp	.+4      	; 0xc96 <DIO_InitPinStstus+0x80>
     c92:	66 0f       	add	r22, r22
     c94:	77 1f       	adc	r23, r23
     c96:	8a 95       	dec	r24
     c98:	e2 f7       	brpl	.-8      	; 0xc92 <DIO_InitPinStstus+0x7c>
     c9a:	cb 01       	movw	r24, r22
     c9c:	94 2f       	mov	r25, r20
     c9e:	98 2b       	or	r25, r24
     ca0:	94 bb       	out	0x14, r25	; 20
     ca2:	95 b3       	in	r25, 0x15	; 21
     ca4:	80 95       	com	r24
     ca6:	89 23       	and	r24, r25
     ca8:	85 bb       	out	0x15, r24	; 21
     caa:	08 95       	ret
     cac:	41 b3       	in	r20, 0x11	; 17
     cae:	21 e0       	ldi	r18, 0x01	; 1
     cb0:	30 e0       	ldi	r19, 0x00	; 0
     cb2:	b9 01       	movw	r22, r18
     cb4:	02 c0       	rjmp	.+4      	; 0xcba <DIO_InitPinStstus+0xa4>
     cb6:	66 0f       	add	r22, r22
     cb8:	77 1f       	adc	r23, r23
     cba:	8a 95       	dec	r24
     cbc:	e2 f7       	brpl	.-8      	; 0xcb6 <DIO_InitPinStstus+0xa0>
     cbe:	cb 01       	movw	r24, r22
     cc0:	94 2f       	mov	r25, r20
     cc2:	98 2b       	or	r25, r24
     cc4:	91 bb       	out	0x11, r25	; 17
     cc6:	92 b3       	in	r25, 0x12	; 18
     cc8:	80 95       	com	r24
     cca:	89 23       	and	r24, r25
     ccc:	82 bb       	out	0x12, r24	; 18
     cce:	08 95       	ret
     cd0:	91 30       	cpi	r25, 0x01	; 1
     cd2:	c1 f0       	breq	.+48     	; 0xd04 <DIO_InitPinStstus+0xee>
     cd4:	28 f0       	brcs	.+10     	; 0xce0 <DIO_InitPinStstus+0xca>
     cd6:	92 30       	cpi	r25, 0x02	; 2
     cd8:	39 f1       	breq	.+78     	; 0xd28 <DIO_InitPinStstus+0x112>
     cda:	93 30       	cpi	r25, 0x03	; 3
     cdc:	b9 f1       	breq	.+110    	; 0xd4c <DIO_InitPinStstus+0x136>
     cde:	08 95       	ret
     ce0:	4a b3       	in	r20, 0x1a	; 26
     ce2:	21 e0       	ldi	r18, 0x01	; 1
     ce4:	30 e0       	ldi	r19, 0x00	; 0
     ce6:	b9 01       	movw	r22, r18
     ce8:	02 c0       	rjmp	.+4      	; 0xcee <DIO_InitPinStstus+0xd8>
     cea:	66 0f       	add	r22, r22
     cec:	77 1f       	adc	r23, r23
     cee:	8a 95       	dec	r24
     cf0:	e2 f7       	brpl	.-8      	; 0xcea <DIO_InitPinStstus+0xd4>
     cf2:	cb 01       	movw	r24, r22
     cf4:	80 95       	com	r24
     cf6:	94 2f       	mov	r25, r20
     cf8:	98 23       	and	r25, r24
     cfa:	9a bb       	out	0x1a, r25	; 26
     cfc:	9b b3       	in	r25, 0x1b	; 27
     cfe:	89 23       	and	r24, r25
     d00:	8b bb       	out	0x1b, r24	; 27
     d02:	08 95       	ret
     d04:	47 b3       	in	r20, 0x17	; 23
     d06:	21 e0       	ldi	r18, 0x01	; 1
     d08:	30 e0       	ldi	r19, 0x00	; 0
     d0a:	b9 01       	movw	r22, r18
     d0c:	02 c0       	rjmp	.+4      	; 0xd12 <DIO_InitPinStstus+0xfc>
     d0e:	66 0f       	add	r22, r22
     d10:	77 1f       	adc	r23, r23
     d12:	8a 95       	dec	r24
     d14:	e2 f7       	brpl	.-8      	; 0xd0e <DIO_InitPinStstus+0xf8>
     d16:	cb 01       	movw	r24, r22
     d18:	80 95       	com	r24
     d1a:	94 2f       	mov	r25, r20
     d1c:	98 23       	and	r25, r24
     d1e:	97 bb       	out	0x17, r25	; 23
     d20:	98 b3       	in	r25, 0x18	; 24
     d22:	89 23       	and	r24, r25
     d24:	88 bb       	out	0x18, r24	; 24
     d26:	08 95       	ret
     d28:	44 b3       	in	r20, 0x14	; 20
     d2a:	21 e0       	ldi	r18, 0x01	; 1
     d2c:	30 e0       	ldi	r19, 0x00	; 0
     d2e:	b9 01       	movw	r22, r18
     d30:	02 c0       	rjmp	.+4      	; 0xd36 <DIO_InitPinStstus+0x120>
     d32:	66 0f       	add	r22, r22
     d34:	77 1f       	adc	r23, r23
     d36:	8a 95       	dec	r24
     d38:	e2 f7       	brpl	.-8      	; 0xd32 <DIO_InitPinStstus+0x11c>
     d3a:	cb 01       	movw	r24, r22
     d3c:	80 95       	com	r24
     d3e:	94 2f       	mov	r25, r20
     d40:	98 23       	and	r25, r24
     d42:	94 bb       	out	0x14, r25	; 20
     d44:	95 b3       	in	r25, 0x15	; 21
     d46:	89 23       	and	r24, r25
     d48:	85 bb       	out	0x15, r24	; 21
     d4a:	08 95       	ret
     d4c:	41 b3       	in	r20, 0x11	; 17
     d4e:	21 e0       	ldi	r18, 0x01	; 1
     d50:	30 e0       	ldi	r19, 0x00	; 0
     d52:	b9 01       	movw	r22, r18
     d54:	02 c0       	rjmp	.+4      	; 0xd5a <DIO_InitPinStstus+0x144>
     d56:	66 0f       	add	r22, r22
     d58:	77 1f       	adc	r23, r23
     d5a:	8a 95       	dec	r24
     d5c:	e2 f7       	brpl	.-8      	; 0xd56 <DIO_InitPinStstus+0x140>
     d5e:	cb 01       	movw	r24, r22
     d60:	80 95       	com	r24
     d62:	94 2f       	mov	r25, r20
     d64:	98 23       	and	r25, r24
     d66:	91 bb       	out	0x11, r25	; 17
     d68:	92 b3       	in	r25, 0x12	; 18
     d6a:	89 23       	and	r24, r25
     d6c:	82 bb       	out	0x12, r24	; 18
     d6e:	08 95       	ret
     d70:	91 30       	cpi	r25, 0x01	; 1
     d72:	c1 f0       	breq	.+48     	; 0xda4 <DIO_InitPinStstus+0x18e>
     d74:	28 f0       	brcs	.+10     	; 0xd80 <DIO_InitPinStstus+0x16a>
     d76:	92 30       	cpi	r25, 0x02	; 2
     d78:	39 f1       	breq	.+78     	; 0xdc8 <DIO_InitPinStstus+0x1b2>
     d7a:	93 30       	cpi	r25, 0x03	; 3
     d7c:	b9 f1       	breq	.+110    	; 0xdec <DIO_InitPinStstus+0x1d6>
     d7e:	08 95       	ret
     d80:	4a b3       	in	r20, 0x1a	; 26
     d82:	21 e0       	ldi	r18, 0x01	; 1
     d84:	30 e0       	ldi	r19, 0x00	; 0
     d86:	b9 01       	movw	r22, r18
     d88:	02 c0       	rjmp	.+4      	; 0xd8e <DIO_InitPinStstus+0x178>
     d8a:	66 0f       	add	r22, r22
     d8c:	77 1f       	adc	r23, r23
     d8e:	8a 95       	dec	r24
     d90:	e2 f7       	brpl	.-8      	; 0xd8a <DIO_InitPinStstus+0x174>
     d92:	cb 01       	movw	r24, r22
     d94:	96 2f       	mov	r25, r22
     d96:	90 95       	com	r25
     d98:	94 23       	and	r25, r20
     d9a:	9a bb       	out	0x1a, r25	; 26
     d9c:	9b b3       	in	r25, 0x1b	; 27
     d9e:	89 2b       	or	r24, r25
     da0:	8b bb       	out	0x1b, r24	; 27
     da2:	08 95       	ret
     da4:	47 b3       	in	r20, 0x17	; 23
     da6:	21 e0       	ldi	r18, 0x01	; 1
     da8:	30 e0       	ldi	r19, 0x00	; 0
     daa:	b9 01       	movw	r22, r18
     dac:	02 c0       	rjmp	.+4      	; 0xdb2 <DIO_InitPinStstus+0x19c>
     dae:	66 0f       	add	r22, r22
     db0:	77 1f       	adc	r23, r23
     db2:	8a 95       	dec	r24
     db4:	e2 f7       	brpl	.-8      	; 0xdae <DIO_InitPinStstus+0x198>
     db6:	cb 01       	movw	r24, r22
     db8:	96 2f       	mov	r25, r22
     dba:	90 95       	com	r25
     dbc:	94 23       	and	r25, r20
     dbe:	97 bb       	out	0x17, r25	; 23
     dc0:	98 b3       	in	r25, 0x18	; 24
     dc2:	89 2b       	or	r24, r25
     dc4:	88 bb       	out	0x18, r24	; 24
     dc6:	08 95       	ret
     dc8:	44 b3       	in	r20, 0x14	; 20
     dca:	21 e0       	ldi	r18, 0x01	; 1
     dcc:	30 e0       	ldi	r19, 0x00	; 0
     dce:	b9 01       	movw	r22, r18
     dd0:	02 c0       	rjmp	.+4      	; 0xdd6 <DIO_InitPinStstus+0x1c0>
     dd2:	66 0f       	add	r22, r22
     dd4:	77 1f       	adc	r23, r23
     dd6:	8a 95       	dec	r24
     dd8:	e2 f7       	brpl	.-8      	; 0xdd2 <DIO_InitPinStstus+0x1bc>
     dda:	cb 01       	movw	r24, r22
     ddc:	96 2f       	mov	r25, r22
     dde:	90 95       	com	r25
     de0:	94 23       	and	r25, r20
     de2:	94 bb       	out	0x14, r25	; 20
     de4:	95 b3       	in	r25, 0x15	; 21
     de6:	89 2b       	or	r24, r25
     de8:	85 bb       	out	0x15, r24	; 21
     dea:	08 95       	ret
     dec:	41 b3       	in	r20, 0x11	; 17
     dee:	21 e0       	ldi	r18, 0x01	; 1
     df0:	30 e0       	ldi	r19, 0x00	; 0
     df2:	b9 01       	movw	r22, r18
     df4:	02 c0       	rjmp	.+4      	; 0xdfa <DIO_InitPinStstus+0x1e4>
     df6:	66 0f       	add	r22, r22
     df8:	77 1f       	adc	r23, r23
     dfa:	8a 95       	dec	r24
     dfc:	e2 f7       	brpl	.-8      	; 0xdf6 <DIO_InitPinStstus+0x1e0>
     dfe:	cb 01       	movw	r24, r22
     e00:	96 2f       	mov	r25, r22
     e02:	90 95       	com	r25
     e04:	94 23       	and	r25, r20
     e06:	91 bb       	out	0x11, r25	; 17
     e08:	92 b3       	in	r25, 0x12	; 18
     e0a:	89 2b       	or	r24, r25
     e0c:	82 bb       	out	0x12, r24	; 18
     e0e:	08 95       	ret

00000e10 <DIO_InitDirection>:
     e10:	cf 93       	push	r28
     e12:	c0 e0       	ldi	r28, 0x00	; 0
     e14:	09 c0       	rjmp	.+18     	; 0xe28 <DIO_InitDirection+0x18>
     e16:	ec 2f       	mov	r30, r28
     e18:	f0 e0       	ldi	r31, 0x00	; 0
     e1a:	ec 59       	subi	r30, 0x9C	; 156
     e1c:	ff 4f       	sbci	r31, 0xFF	; 255
     e1e:	60 81       	ld	r22, Z
     e20:	8c 2f       	mov	r24, r28
     e22:	0e 94 0b 06 	call	0xc16	; 0xc16 <DIO_InitPinStstus>
     e26:	cf 5f       	subi	r28, 0xFF	; 255
     e28:	c0 32       	cpi	r28, 0x20	; 32
     e2a:	a8 f3       	brcs	.-22     	; 0xe16 <DIO_InitDirection+0x6>
     e2c:	cf 91       	pop	r28
     e2e:	08 95       	ret

00000e30 <DIO_enuWritePin>:
     e30:	98 2f       	mov	r25, r24
     e32:	96 95       	lsr	r25
     e34:	96 95       	lsr	r25
     e36:	96 95       	lsr	r25
     e38:	28 2f       	mov	r18, r24
     e3a:	27 70       	andi	r18, 0x07	; 7
     e3c:	80 32       	cpi	r24, 0x20	; 32
     e3e:	08 f0       	brcs	.+2      	; 0xe42 <DIO_enuWritePin+0x12>
     e40:	cc c0       	rjmp	.+408    	; 0xfda <DIO_enuWritePin+0x1aa>
     e42:	66 23       	and	r22, r22
     e44:	09 f4       	brne	.+2      	; 0xe48 <DIO_enuWritePin+0x18>
     e46:	64 c0       	rjmp	.+200    	; 0xf10 <DIO_enuWritePin+0xe0>
     e48:	61 30       	cpi	r22, 0x01	; 1
     e4a:	09 f0       	breq	.+2      	; 0xe4e <DIO_enuWritePin+0x1e>
     e4c:	c8 c0       	rjmp	.+400    	; 0xfde <DIO_enuWritePin+0x1ae>
     e4e:	91 30       	cpi	r25, 0x01	; 1
     e50:	e9 f0       	breq	.+58     	; 0xe8c <DIO_enuWritePin+0x5c>
     e52:	30 f0       	brcs	.+12     	; 0xe60 <DIO_enuWritePin+0x30>
     e54:	92 30       	cpi	r25, 0x02	; 2
     e56:	81 f1       	breq	.+96     	; 0xeb8 <DIO_enuWritePin+0x88>
     e58:	93 30       	cpi	r25, 0x03	; 3
     e5a:	09 f4       	brne	.+2      	; 0xe5e <DIO_enuWritePin+0x2e>
     e5c:	43 c0       	rjmp	.+134    	; 0xee4 <DIO_enuWritePin+0xb4>
     e5e:	c1 c0       	rjmp	.+386    	; 0xfe2 <DIO_enuWritePin+0x1b2>
     e60:	8a b3       	in	r24, 0x1a	; 26
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	02 2e       	mov	r0, r18
     e66:	02 c0       	rjmp	.+4      	; 0xe6c <DIO_enuWritePin+0x3c>
     e68:	95 95       	asr	r25
     e6a:	87 95       	ror	r24
     e6c:	0a 94       	dec	r0
     e6e:	e2 f7       	brpl	.-8      	; 0xe68 <DIO_enuWritePin+0x38>
     e70:	80 ff       	sbrs	r24, 0
     e72:	b9 c0       	rjmp	.+370    	; 0xfe6 <DIO_enuWritePin+0x1b6>
     e74:	3b b3       	in	r19, 0x1b	; 27
     e76:	81 e0       	ldi	r24, 0x01	; 1
     e78:	90 e0       	ldi	r25, 0x00	; 0
     e7a:	02 c0       	rjmp	.+4      	; 0xe80 <DIO_enuWritePin+0x50>
     e7c:	88 0f       	add	r24, r24
     e7e:	99 1f       	adc	r25, r25
     e80:	2a 95       	dec	r18
     e82:	e2 f7       	brpl	.-8      	; 0xe7c <DIO_enuWritePin+0x4c>
     e84:	83 2b       	or	r24, r19
     e86:	8b bb       	out	0x1b, r24	; 27
     e88:	80 e0       	ldi	r24, 0x00	; 0
     e8a:	08 95       	ret
     e8c:	87 b3       	in	r24, 0x17	; 23
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	02 2e       	mov	r0, r18
     e92:	02 c0       	rjmp	.+4      	; 0xe98 <DIO_enuWritePin+0x68>
     e94:	95 95       	asr	r25
     e96:	87 95       	ror	r24
     e98:	0a 94       	dec	r0
     e9a:	e2 f7       	brpl	.-8      	; 0xe94 <DIO_enuWritePin+0x64>
     e9c:	80 ff       	sbrs	r24, 0
     e9e:	a5 c0       	rjmp	.+330    	; 0xfea <DIO_enuWritePin+0x1ba>
     ea0:	38 b3       	in	r19, 0x18	; 24
     ea2:	81 e0       	ldi	r24, 0x01	; 1
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	02 c0       	rjmp	.+4      	; 0xeac <DIO_enuWritePin+0x7c>
     ea8:	88 0f       	add	r24, r24
     eaa:	99 1f       	adc	r25, r25
     eac:	2a 95       	dec	r18
     eae:	e2 f7       	brpl	.-8      	; 0xea8 <DIO_enuWritePin+0x78>
     eb0:	83 2b       	or	r24, r19
     eb2:	88 bb       	out	0x18, r24	; 24
     eb4:	80 e0       	ldi	r24, 0x00	; 0
     eb6:	08 95       	ret
     eb8:	84 b3       	in	r24, 0x14	; 20
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	02 2e       	mov	r0, r18
     ebe:	02 c0       	rjmp	.+4      	; 0xec4 <DIO_enuWritePin+0x94>
     ec0:	95 95       	asr	r25
     ec2:	87 95       	ror	r24
     ec4:	0a 94       	dec	r0
     ec6:	e2 f7       	brpl	.-8      	; 0xec0 <DIO_enuWritePin+0x90>
     ec8:	80 ff       	sbrs	r24, 0
     eca:	91 c0       	rjmp	.+290    	; 0xfee <DIO_enuWritePin+0x1be>
     ecc:	35 b3       	in	r19, 0x15	; 21
     ece:	81 e0       	ldi	r24, 0x01	; 1
     ed0:	90 e0       	ldi	r25, 0x00	; 0
     ed2:	02 c0       	rjmp	.+4      	; 0xed8 <DIO_enuWritePin+0xa8>
     ed4:	88 0f       	add	r24, r24
     ed6:	99 1f       	adc	r25, r25
     ed8:	2a 95       	dec	r18
     eda:	e2 f7       	brpl	.-8      	; 0xed4 <DIO_enuWritePin+0xa4>
     edc:	83 2b       	or	r24, r19
     ede:	85 bb       	out	0x15, r24	; 21
     ee0:	80 e0       	ldi	r24, 0x00	; 0
     ee2:	08 95       	ret
     ee4:	81 b3       	in	r24, 0x11	; 17
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	02 2e       	mov	r0, r18
     eea:	02 c0       	rjmp	.+4      	; 0xef0 <DIO_enuWritePin+0xc0>
     eec:	95 95       	asr	r25
     eee:	87 95       	ror	r24
     ef0:	0a 94       	dec	r0
     ef2:	e2 f7       	brpl	.-8      	; 0xeec <DIO_enuWritePin+0xbc>
     ef4:	80 ff       	sbrs	r24, 0
     ef6:	7d c0       	rjmp	.+250    	; 0xff2 <DIO_enuWritePin+0x1c2>
     ef8:	32 b3       	in	r19, 0x12	; 18
     efa:	81 e0       	ldi	r24, 0x01	; 1
     efc:	90 e0       	ldi	r25, 0x00	; 0
     efe:	02 c0       	rjmp	.+4      	; 0xf04 <DIO_enuWritePin+0xd4>
     f00:	88 0f       	add	r24, r24
     f02:	99 1f       	adc	r25, r25
     f04:	2a 95       	dec	r18
     f06:	e2 f7       	brpl	.-8      	; 0xf00 <DIO_enuWritePin+0xd0>
     f08:	83 2b       	or	r24, r19
     f0a:	82 bb       	out	0x12, r24	; 18
     f0c:	80 e0       	ldi	r24, 0x00	; 0
     f0e:	08 95       	ret
     f10:	91 30       	cpi	r25, 0x01	; 1
     f12:	f1 f0       	breq	.+60     	; 0xf50 <DIO_enuWritePin+0x120>
     f14:	30 f0       	brcs	.+12     	; 0xf22 <DIO_enuWritePin+0xf2>
     f16:	92 30       	cpi	r25, 0x02	; 2
     f18:	91 f1       	breq	.+100    	; 0xf7e <DIO_enuWritePin+0x14e>
     f1a:	93 30       	cpi	r25, 0x03	; 3
     f1c:	09 f4       	brne	.+2      	; 0xf20 <DIO_enuWritePin+0xf0>
     f1e:	46 c0       	rjmp	.+140    	; 0xfac <DIO_enuWritePin+0x17c>
     f20:	6a c0       	rjmp	.+212    	; 0xff6 <DIO_enuWritePin+0x1c6>
     f22:	8a b3       	in	r24, 0x1a	; 26
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	02 2e       	mov	r0, r18
     f28:	02 c0       	rjmp	.+4      	; 0xf2e <DIO_enuWritePin+0xfe>
     f2a:	95 95       	asr	r25
     f2c:	87 95       	ror	r24
     f2e:	0a 94       	dec	r0
     f30:	e2 f7       	brpl	.-8      	; 0xf2a <DIO_enuWritePin+0xfa>
     f32:	80 ff       	sbrs	r24, 0
     f34:	62 c0       	rjmp	.+196    	; 0xffa <DIO_enuWritePin+0x1ca>
     f36:	3b b3       	in	r19, 0x1b	; 27
     f38:	81 e0       	ldi	r24, 0x01	; 1
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	02 c0       	rjmp	.+4      	; 0xf42 <DIO_enuWritePin+0x112>
     f3e:	88 0f       	add	r24, r24
     f40:	99 1f       	adc	r25, r25
     f42:	2a 95       	dec	r18
     f44:	e2 f7       	brpl	.-8      	; 0xf3e <DIO_enuWritePin+0x10e>
     f46:	80 95       	com	r24
     f48:	83 23       	and	r24, r19
     f4a:	8b bb       	out	0x1b, r24	; 27
     f4c:	80 e0       	ldi	r24, 0x00	; 0
     f4e:	08 95       	ret
     f50:	87 b3       	in	r24, 0x17	; 23
     f52:	90 e0       	ldi	r25, 0x00	; 0
     f54:	02 2e       	mov	r0, r18
     f56:	02 c0       	rjmp	.+4      	; 0xf5c <DIO_enuWritePin+0x12c>
     f58:	95 95       	asr	r25
     f5a:	87 95       	ror	r24
     f5c:	0a 94       	dec	r0
     f5e:	e2 f7       	brpl	.-8      	; 0xf58 <DIO_enuWritePin+0x128>
     f60:	80 ff       	sbrs	r24, 0
     f62:	4d c0       	rjmp	.+154    	; 0xffe <DIO_enuWritePin+0x1ce>
     f64:	38 b3       	in	r19, 0x18	; 24
     f66:	81 e0       	ldi	r24, 0x01	; 1
     f68:	90 e0       	ldi	r25, 0x00	; 0
     f6a:	02 c0       	rjmp	.+4      	; 0xf70 <DIO_enuWritePin+0x140>
     f6c:	88 0f       	add	r24, r24
     f6e:	99 1f       	adc	r25, r25
     f70:	2a 95       	dec	r18
     f72:	e2 f7       	brpl	.-8      	; 0xf6c <DIO_enuWritePin+0x13c>
     f74:	80 95       	com	r24
     f76:	83 23       	and	r24, r19
     f78:	88 bb       	out	0x18, r24	; 24
     f7a:	80 e0       	ldi	r24, 0x00	; 0
     f7c:	08 95       	ret
     f7e:	84 b3       	in	r24, 0x14	; 20
     f80:	90 e0       	ldi	r25, 0x00	; 0
     f82:	02 2e       	mov	r0, r18
     f84:	02 c0       	rjmp	.+4      	; 0xf8a <DIO_enuWritePin+0x15a>
     f86:	95 95       	asr	r25
     f88:	87 95       	ror	r24
     f8a:	0a 94       	dec	r0
     f8c:	e2 f7       	brpl	.-8      	; 0xf86 <DIO_enuWritePin+0x156>
     f8e:	80 ff       	sbrs	r24, 0
     f90:	38 c0       	rjmp	.+112    	; 0x1002 <DIO_enuWritePin+0x1d2>
     f92:	35 b3       	in	r19, 0x15	; 21
     f94:	81 e0       	ldi	r24, 0x01	; 1
     f96:	90 e0       	ldi	r25, 0x00	; 0
     f98:	02 c0       	rjmp	.+4      	; 0xf9e <DIO_enuWritePin+0x16e>
     f9a:	88 0f       	add	r24, r24
     f9c:	99 1f       	adc	r25, r25
     f9e:	2a 95       	dec	r18
     fa0:	e2 f7       	brpl	.-8      	; 0xf9a <DIO_enuWritePin+0x16a>
     fa2:	80 95       	com	r24
     fa4:	83 23       	and	r24, r19
     fa6:	85 bb       	out	0x15, r24	; 21
     fa8:	80 e0       	ldi	r24, 0x00	; 0
     faa:	08 95       	ret
     fac:	81 b3       	in	r24, 0x11	; 17
     fae:	90 e0       	ldi	r25, 0x00	; 0
     fb0:	02 2e       	mov	r0, r18
     fb2:	02 c0       	rjmp	.+4      	; 0xfb8 <DIO_enuWritePin+0x188>
     fb4:	95 95       	asr	r25
     fb6:	87 95       	ror	r24
     fb8:	0a 94       	dec	r0
     fba:	e2 f7       	brpl	.-8      	; 0xfb4 <DIO_enuWritePin+0x184>
     fbc:	80 ff       	sbrs	r24, 0
     fbe:	23 c0       	rjmp	.+70     	; 0x1006 <DIO_enuWritePin+0x1d6>
     fc0:	32 b3       	in	r19, 0x12	; 18
     fc2:	81 e0       	ldi	r24, 0x01	; 1
     fc4:	90 e0       	ldi	r25, 0x00	; 0
     fc6:	02 c0       	rjmp	.+4      	; 0xfcc <DIO_enuWritePin+0x19c>
     fc8:	88 0f       	add	r24, r24
     fca:	99 1f       	adc	r25, r25
     fcc:	2a 95       	dec	r18
     fce:	e2 f7       	brpl	.-8      	; 0xfc8 <DIO_enuWritePin+0x198>
     fd0:	80 95       	com	r24
     fd2:	83 23       	and	r24, r19
     fd4:	82 bb       	out	0x12, r24	; 18
     fd6:	80 e0       	ldi	r24, 0x00	; 0
     fd8:	08 95       	ret
     fda:	82 e0       	ldi	r24, 0x02	; 2
     fdc:	08 95       	ret
     fde:	85 e0       	ldi	r24, 0x05	; 5
     fe0:	08 95       	ret
     fe2:	80 e0       	ldi	r24, 0x00	; 0
     fe4:	08 95       	ret
     fe6:	83 e0       	ldi	r24, 0x03	; 3
     fe8:	08 95       	ret
     fea:	83 e0       	ldi	r24, 0x03	; 3
     fec:	08 95       	ret
     fee:	83 e0       	ldi	r24, 0x03	; 3
     ff0:	08 95       	ret
     ff2:	83 e0       	ldi	r24, 0x03	; 3
     ff4:	08 95       	ret
     ff6:	80 e0       	ldi	r24, 0x00	; 0
     ff8:	08 95       	ret
     ffa:	83 e0       	ldi	r24, 0x03	; 3
     ffc:	08 95       	ret
     ffe:	83 e0       	ldi	r24, 0x03	; 3
    1000:	08 95       	ret
    1002:	83 e0       	ldi	r24, 0x03	; 3
    1004:	08 95       	ret
    1006:	83 e0       	ldi	r24, 0x03	; 3
    1008:	08 95       	ret

0000100a <DIO_enuWritePort>:
{
	DIO_ErrorStatus_t localerror=DIO_OK;
	
	if (value>=MIN_U8 && value<=MAX_U8)
	{
		switch(port)
    100a:	81 30       	cpi	r24, 0x01	; 1
    100c:	49 f0       	breq	.+18     	; 0x1020 <DIO_enuWritePort+0x16>
    100e:	28 f0       	brcs	.+10     	; 0x101a <DIO_enuWritePort+0x10>
    1010:	82 30       	cpi	r24, 0x02	; 2
    1012:	49 f0       	breq	.+18     	; 0x1026 <DIO_enuWritePort+0x1c>
    1014:	83 30       	cpi	r24, 0x03	; 3
    1016:	51 f0       	breq	.+20     	; 0x102c <DIO_enuWritePort+0x22>
    1018:	0c c0       	rjmp	.+24     	; 0x1032 <DIO_enuWritePort+0x28>
		{
			case PORT_A:
			
			
			PORTA=value;
    101a:	6b bb       	out	0x1b, r22	; 27
}


DIO_ErrorStatus_t DIO_enuWritePort (DIO_Port_t port , u8 value)
{
	DIO_ErrorStatus_t localerror=DIO_OK;
    101c:	80 e0       	ldi	r24, 0x00	; 0
		{
			case PORT_A:
			
			
			PORTA=value;
			break;
    101e:	08 95       	ret
			
			
			case PORT_B:
			
			PORTB=value;
    1020:	68 bb       	out	0x18, r22	; 24
}


DIO_ErrorStatus_t DIO_enuWritePort (DIO_Port_t port , u8 value)
{
	DIO_ErrorStatus_t localerror=DIO_OK;
    1022:	80 e0       	ldi	r24, 0x00	; 0
			
			
			case PORT_B:
			
			PORTB=value;
			break;
    1024:	08 95       	ret
			
			case PORT_C:
			
			PORTC=value;
    1026:	65 bb       	out	0x15, r22	; 21
}


DIO_ErrorStatus_t DIO_enuWritePort (DIO_Port_t port , u8 value)
{
	DIO_ErrorStatus_t localerror=DIO_OK;
    1028:	80 e0       	ldi	r24, 0x00	; 0
			break;
			
			case PORT_C:
			
			PORTC=value;
			break;
    102a:	08 95       	ret
			
			
			case PORT_D:
			
			PORTD=value;
    102c:	62 bb       	out	0x12, r22	; 18
}


DIO_ErrorStatus_t DIO_enuWritePort (DIO_Port_t port , u8 value)
{
	DIO_ErrorStatus_t localerror=DIO_OK;
    102e:	80 e0       	ldi	r24, 0x00	; 0
			
			
			case PORT_D:
			
			PORTD=value;
			break;
    1030:	08 95       	ret
			
			default:
			localerror=DIO_INVALID_PORT;
    1032:	81 e0       	ldi	r24, 0x01	; 1
		localerror=DIO_OUTOF_RANGE;
		
	}
	return localerror;
	
}
    1034:	08 95       	ret

00001036 <ADC_Init>:
static u8 ADC_BusyFlag=0;

void ADC_Init(ADC_VREF_t vref,ADC_Prescaler_t prescaler)
{
	/*Set Volt Reference Value*/ 
	switch(vref)
    1036:	81 30       	cpi	r24, 0x01	; 1
    1038:	89 f0       	breq	.+34     	; 0x105c <ADC_Init+0x26>
    103a:	18 f0       	brcs	.+6      	; 0x1042 <ADC_Init+0xc>
    103c:	83 30       	cpi	r24, 0x03	; 3
    103e:	d9 f0       	breq	.+54     	; 0x1076 <ADC_Init+0x40>
    1040:	26 c0       	rjmp	.+76     	; 0x108e <ADC_Init+0x58>
	{
		case ADC_VREF_AREF:
		
		CLR_BIT(ADMUX,ADMUX_REFS0);
    1042:	87 b1       	in	r24, 0x07	; 7
    1044:	8f 7b       	andi	r24, 0xBF	; 191
    1046:	87 b9       	out	0x07, r24	; 7
		CLR_BIT(ADMUX,ADMUX_REFS1);
    1048:	87 b1       	in	r24, 0x07	; 7
    104a:	8f 77       	andi	r24, 0x7F	; 127
    104c:	87 b9       	out	0x07, r24	; 7
		VoltReference=VREF_AREF;
    104e:	88 e8       	ldi	r24, 0x88	; 136
    1050:	93 e1       	ldi	r25, 0x13	; 19
    1052:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <VoltReference+0x1>
    1056:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <VoltReference>
		break;
    105a:	19 c0       	rjmp	.+50     	; 0x108e <ADC_Init+0x58>
		
		case ADC_VREF_AVCC:
		
		SET_BIT(ADMUX,ADMUX_REFS0);
    105c:	87 b1       	in	r24, 0x07	; 7
    105e:	80 64       	ori	r24, 0x40	; 64
    1060:	87 b9       	out	0x07, r24	; 7
		CLR_BIT(ADMUX,ADMUX_REFS1);
    1062:	87 b1       	in	r24, 0x07	; 7
    1064:	8f 77       	andi	r24, 0x7F	; 127
    1066:	87 b9       	out	0x07, r24	; 7
		VoltReference=5000;
    1068:	88 e8       	ldi	r24, 0x88	; 136
    106a:	93 e1       	ldi	r25, 0x13	; 19
    106c:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <VoltReference+0x1>
    1070:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <VoltReference>
		break;
    1074:	0c c0       	rjmp	.+24     	; 0x108e <ADC_Init+0x58>
		
		case ADC_VREF_2_56V:
		
		SET_BIT(ADMUX,ADMUX_REFS0);
    1076:	87 b1       	in	r24, 0x07	; 7
    1078:	80 64       	ori	r24, 0x40	; 64
    107a:	87 b9       	out	0x07, r24	; 7
		SET_BIT(ADMUX,ADMUX_REFS1);
    107c:	87 b1       	in	r24, 0x07	; 7
    107e:	80 68       	ori	r24, 0x80	; 128
    1080:	87 b9       	out	0x07, r24	; 7
		VoltReference=2560;
    1082:	80 e0       	ldi	r24, 0x00	; 0
    1084:	9a e0       	ldi	r25, 0x0A	; 10
    1086:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <VoltReference+0x1>
    108a:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <VoltReference>
	
	/*Set READ Type*/
	
	#if ADC_READBIT == ADC_READ_10BIT
	
	CLR_BIT(ADMUX ,ADMUX_ADLAR) ;
    108e:	87 b1       	in	r24, 0x07	; 7
    1090:	8f 7d       	andi	r24, 0xDF	; 223
    1092:	87 b9       	out	0x07, r24	; 7
	
	#endif
	
	/*Set Prescaler Value*/
	
	prescaler=prescaler&0x07;
    1094:	67 70       	andi	r22, 0x07	; 7
	ADCSRA=ADCSRA&0xf8;
    1096:	86 b1       	in	r24, 0x06	; 6
    1098:	88 7f       	andi	r24, 0xF8	; 248
    109a:	86 b9       	out	0x06, r24	; 6
	ADCSRA=ADCSRA|prescaler;
    109c:	86 b1       	in	r24, 0x06	; 6
    109e:	68 2b       	or	r22, r24
    10a0:	66 b9       	out	0x06, r22	; 6
	
	#if (ADC_STATUS == ADC_DISABLE)
	CLR_BIT(ADCSRA,ADCSRA_ADEN) ;

	#elif (ADC_STATUS == ADC_ENABLE)
	SET_BIT(ADCSRA ,ADCSRA_ADEN) ;
    10a2:	86 b1       	in	r24, 0x06	; 6
    10a4:	80 68       	ori	r24, 0x80	; 128
    10a6:	86 b9       	out	0x06, r24	; 6
    10a8:	08 95       	ret

000010aa <__subsf3>:
    10aa:	50 58       	subi	r21, 0x80	; 128

000010ac <__addsf3>:
    10ac:	bb 27       	eor	r27, r27
    10ae:	aa 27       	eor	r26, r26
    10b0:	0e 94 6d 08 	call	0x10da	; 0x10da <__addsf3x>
    10b4:	0c 94 75 09 	jmp	0x12ea	; 0x12ea <__fp_round>
    10b8:	0e 94 67 09 	call	0x12ce	; 0x12ce <__fp_pscA>
    10bc:	38 f0       	brcs	.+14     	; 0x10cc <__addsf3+0x20>
    10be:	0e 94 6e 09 	call	0x12dc	; 0x12dc <__fp_pscB>
    10c2:	20 f0       	brcs	.+8      	; 0x10cc <__addsf3+0x20>
    10c4:	39 f4       	brne	.+14     	; 0x10d4 <__addsf3+0x28>
    10c6:	9f 3f       	cpi	r25, 0xFF	; 255
    10c8:	19 f4       	brne	.+6      	; 0x10d0 <__addsf3+0x24>
    10ca:	26 f4       	brtc	.+8      	; 0x10d4 <__addsf3+0x28>
    10cc:	0c 94 64 09 	jmp	0x12c8	; 0x12c8 <__fp_nan>
    10d0:	0e f4       	brtc	.+2      	; 0x10d4 <__addsf3+0x28>
    10d2:	e0 95       	com	r30
    10d4:	e7 fb       	bst	r30, 7
    10d6:	0c 94 5e 09 	jmp	0x12bc	; 0x12bc <__fp_inf>

000010da <__addsf3x>:
    10da:	e9 2f       	mov	r30, r25
    10dc:	0e 94 86 09 	call	0x130c	; 0x130c <__fp_split3>
    10e0:	58 f3       	brcs	.-42     	; 0x10b8 <__addsf3+0xc>
    10e2:	ba 17       	cp	r27, r26
    10e4:	62 07       	cpc	r22, r18
    10e6:	73 07       	cpc	r23, r19
    10e8:	84 07       	cpc	r24, r20
    10ea:	95 07       	cpc	r25, r21
    10ec:	20 f0       	brcs	.+8      	; 0x10f6 <__addsf3x+0x1c>
    10ee:	79 f4       	brne	.+30     	; 0x110e <__addsf3x+0x34>
    10f0:	a6 f5       	brtc	.+104    	; 0x115a <__addsf3x+0x80>
    10f2:	0c 94 a8 09 	jmp	0x1350	; 0x1350 <__fp_zero>
    10f6:	0e f4       	brtc	.+2      	; 0x10fa <__addsf3x+0x20>
    10f8:	e0 95       	com	r30
    10fa:	0b 2e       	mov	r0, r27
    10fc:	ba 2f       	mov	r27, r26
    10fe:	a0 2d       	mov	r26, r0
    1100:	0b 01       	movw	r0, r22
    1102:	b9 01       	movw	r22, r18
    1104:	90 01       	movw	r18, r0
    1106:	0c 01       	movw	r0, r24
    1108:	ca 01       	movw	r24, r20
    110a:	a0 01       	movw	r20, r0
    110c:	11 24       	eor	r1, r1
    110e:	ff 27       	eor	r31, r31
    1110:	59 1b       	sub	r21, r25
    1112:	99 f0       	breq	.+38     	; 0x113a <__addsf3x+0x60>
    1114:	59 3f       	cpi	r21, 0xF9	; 249
    1116:	50 f4       	brcc	.+20     	; 0x112c <__addsf3x+0x52>
    1118:	50 3e       	cpi	r21, 0xE0	; 224
    111a:	68 f1       	brcs	.+90     	; 0x1176 <__addsf3x+0x9c>
    111c:	1a 16       	cp	r1, r26
    111e:	f0 40       	sbci	r31, 0x00	; 0
    1120:	a2 2f       	mov	r26, r18
    1122:	23 2f       	mov	r18, r19
    1124:	34 2f       	mov	r19, r20
    1126:	44 27       	eor	r20, r20
    1128:	58 5f       	subi	r21, 0xF8	; 248
    112a:	f3 cf       	rjmp	.-26     	; 0x1112 <__addsf3x+0x38>
    112c:	46 95       	lsr	r20
    112e:	37 95       	ror	r19
    1130:	27 95       	ror	r18
    1132:	a7 95       	ror	r26
    1134:	f0 40       	sbci	r31, 0x00	; 0
    1136:	53 95       	inc	r21
    1138:	c9 f7       	brne	.-14     	; 0x112c <__addsf3x+0x52>
    113a:	7e f4       	brtc	.+30     	; 0x115a <__addsf3x+0x80>
    113c:	1f 16       	cp	r1, r31
    113e:	ba 0b       	sbc	r27, r26
    1140:	62 0b       	sbc	r22, r18
    1142:	73 0b       	sbc	r23, r19
    1144:	84 0b       	sbc	r24, r20
    1146:	ba f0       	brmi	.+46     	; 0x1176 <__addsf3x+0x9c>
    1148:	91 50       	subi	r25, 0x01	; 1
    114a:	a1 f0       	breq	.+40     	; 0x1174 <__addsf3x+0x9a>
    114c:	ff 0f       	add	r31, r31
    114e:	bb 1f       	adc	r27, r27
    1150:	66 1f       	adc	r22, r22
    1152:	77 1f       	adc	r23, r23
    1154:	88 1f       	adc	r24, r24
    1156:	c2 f7       	brpl	.-16     	; 0x1148 <__addsf3x+0x6e>
    1158:	0e c0       	rjmp	.+28     	; 0x1176 <__addsf3x+0x9c>
    115a:	ba 0f       	add	r27, r26
    115c:	62 1f       	adc	r22, r18
    115e:	73 1f       	adc	r23, r19
    1160:	84 1f       	adc	r24, r20
    1162:	48 f4       	brcc	.+18     	; 0x1176 <__addsf3x+0x9c>
    1164:	87 95       	ror	r24
    1166:	77 95       	ror	r23
    1168:	67 95       	ror	r22
    116a:	b7 95       	ror	r27
    116c:	f7 95       	ror	r31
    116e:	9e 3f       	cpi	r25, 0xFE	; 254
    1170:	08 f0       	brcs	.+2      	; 0x1174 <__addsf3x+0x9a>
    1172:	b0 cf       	rjmp	.-160    	; 0x10d4 <__addsf3+0x28>
    1174:	93 95       	inc	r25
    1176:	88 0f       	add	r24, r24
    1178:	08 f0       	brcs	.+2      	; 0x117c <__addsf3x+0xa2>
    117a:	99 27       	eor	r25, r25
    117c:	ee 0f       	add	r30, r30
    117e:	97 95       	ror	r25
    1180:	87 95       	ror	r24
    1182:	08 95       	ret

00001184 <__cmpsf2>:
    1184:	0e 94 3a 09 	call	0x1274	; 0x1274 <__fp_cmp>
    1188:	08 f4       	brcc	.+2      	; 0x118c <__cmpsf2+0x8>
    118a:	81 e0       	ldi	r24, 0x01	; 1
    118c:	08 95       	ret

0000118e <__fixsfsi>:
    118e:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
    1192:	68 94       	set
    1194:	b1 11       	cpse	r27, r1
    1196:	0c 94 a9 09 	jmp	0x1352	; 0x1352 <__fp_szero>
    119a:	08 95       	ret

0000119c <__fixunssfsi>:
    119c:	0e 94 8e 09 	call	0x131c	; 0x131c <__fp_splitA>
    11a0:	88 f0       	brcs	.+34     	; 0x11c4 <__fixunssfsi+0x28>
    11a2:	9f 57       	subi	r25, 0x7F	; 127
    11a4:	98 f0       	brcs	.+38     	; 0x11cc <__fixunssfsi+0x30>
    11a6:	b9 2f       	mov	r27, r25
    11a8:	99 27       	eor	r25, r25
    11aa:	b7 51       	subi	r27, 0x17	; 23
    11ac:	b0 f0       	brcs	.+44     	; 0x11da <__fixunssfsi+0x3e>
    11ae:	e1 f0       	breq	.+56     	; 0x11e8 <__fixunssfsi+0x4c>
    11b0:	66 0f       	add	r22, r22
    11b2:	77 1f       	adc	r23, r23
    11b4:	88 1f       	adc	r24, r24
    11b6:	99 1f       	adc	r25, r25
    11b8:	1a f0       	brmi	.+6      	; 0x11c0 <__fixunssfsi+0x24>
    11ba:	ba 95       	dec	r27
    11bc:	c9 f7       	brne	.-14     	; 0x11b0 <__fixunssfsi+0x14>
    11be:	14 c0       	rjmp	.+40     	; 0x11e8 <__fixunssfsi+0x4c>
    11c0:	b1 30       	cpi	r27, 0x01	; 1
    11c2:	91 f0       	breq	.+36     	; 0x11e8 <__fixunssfsi+0x4c>
    11c4:	0e 94 a8 09 	call	0x1350	; 0x1350 <__fp_zero>
    11c8:	b1 e0       	ldi	r27, 0x01	; 1
    11ca:	08 95       	ret
    11cc:	0c 94 a8 09 	jmp	0x1350	; 0x1350 <__fp_zero>
    11d0:	67 2f       	mov	r22, r23
    11d2:	78 2f       	mov	r23, r24
    11d4:	88 27       	eor	r24, r24
    11d6:	b8 5f       	subi	r27, 0xF8	; 248
    11d8:	39 f0       	breq	.+14     	; 0x11e8 <__fixunssfsi+0x4c>
    11da:	b9 3f       	cpi	r27, 0xF9	; 249
    11dc:	cc f3       	brlt	.-14     	; 0x11d0 <__fixunssfsi+0x34>
    11de:	86 95       	lsr	r24
    11e0:	77 95       	ror	r23
    11e2:	67 95       	ror	r22
    11e4:	b3 95       	inc	r27
    11e6:	d9 f7       	brne	.-10     	; 0x11de <__fixunssfsi+0x42>
    11e8:	3e f4       	brtc	.+14     	; 0x11f8 <__fixunssfsi+0x5c>
    11ea:	90 95       	com	r25
    11ec:	80 95       	com	r24
    11ee:	70 95       	com	r23
    11f0:	61 95       	neg	r22
    11f2:	7f 4f       	sbci	r23, 0xFF	; 255
    11f4:	8f 4f       	sbci	r24, 0xFF	; 255
    11f6:	9f 4f       	sbci	r25, 0xFF	; 255
    11f8:	08 95       	ret

000011fa <__floatunsisf>:
    11fa:	e8 94       	clt
    11fc:	09 c0       	rjmp	.+18     	; 0x1210 <__floatsisf+0x12>

000011fe <__floatsisf>:
    11fe:	97 fb       	bst	r25, 7
    1200:	3e f4       	brtc	.+14     	; 0x1210 <__floatsisf+0x12>
    1202:	90 95       	com	r25
    1204:	80 95       	com	r24
    1206:	70 95       	com	r23
    1208:	61 95       	neg	r22
    120a:	7f 4f       	sbci	r23, 0xFF	; 255
    120c:	8f 4f       	sbci	r24, 0xFF	; 255
    120e:	9f 4f       	sbci	r25, 0xFF	; 255
    1210:	99 23       	and	r25, r25
    1212:	a9 f0       	breq	.+42     	; 0x123e <__floatsisf+0x40>
    1214:	f9 2f       	mov	r31, r25
    1216:	96 e9       	ldi	r25, 0x96	; 150
    1218:	bb 27       	eor	r27, r27
    121a:	93 95       	inc	r25
    121c:	f6 95       	lsr	r31
    121e:	87 95       	ror	r24
    1220:	77 95       	ror	r23
    1222:	67 95       	ror	r22
    1224:	b7 95       	ror	r27
    1226:	f1 11       	cpse	r31, r1
    1228:	f8 cf       	rjmp	.-16     	; 0x121a <__floatsisf+0x1c>
    122a:	fa f4       	brpl	.+62     	; 0x126a <__floatsisf+0x6c>
    122c:	bb 0f       	add	r27, r27
    122e:	11 f4       	brne	.+4      	; 0x1234 <__floatsisf+0x36>
    1230:	60 ff       	sbrs	r22, 0
    1232:	1b c0       	rjmp	.+54     	; 0x126a <__floatsisf+0x6c>
    1234:	6f 5f       	subi	r22, 0xFF	; 255
    1236:	7f 4f       	sbci	r23, 0xFF	; 255
    1238:	8f 4f       	sbci	r24, 0xFF	; 255
    123a:	9f 4f       	sbci	r25, 0xFF	; 255
    123c:	16 c0       	rjmp	.+44     	; 0x126a <__floatsisf+0x6c>
    123e:	88 23       	and	r24, r24
    1240:	11 f0       	breq	.+4      	; 0x1246 <__floatsisf+0x48>
    1242:	96 e9       	ldi	r25, 0x96	; 150
    1244:	11 c0       	rjmp	.+34     	; 0x1268 <__floatsisf+0x6a>
    1246:	77 23       	and	r23, r23
    1248:	21 f0       	breq	.+8      	; 0x1252 <__floatsisf+0x54>
    124a:	9e e8       	ldi	r25, 0x8E	; 142
    124c:	87 2f       	mov	r24, r23
    124e:	76 2f       	mov	r23, r22
    1250:	05 c0       	rjmp	.+10     	; 0x125c <__floatsisf+0x5e>
    1252:	66 23       	and	r22, r22
    1254:	71 f0       	breq	.+28     	; 0x1272 <__floatsisf+0x74>
    1256:	96 e8       	ldi	r25, 0x86	; 134
    1258:	86 2f       	mov	r24, r22
    125a:	70 e0       	ldi	r23, 0x00	; 0
    125c:	60 e0       	ldi	r22, 0x00	; 0
    125e:	2a f0       	brmi	.+10     	; 0x126a <__floatsisf+0x6c>
    1260:	9a 95       	dec	r25
    1262:	66 0f       	add	r22, r22
    1264:	77 1f       	adc	r23, r23
    1266:	88 1f       	adc	r24, r24
    1268:	da f7       	brpl	.-10     	; 0x1260 <__floatsisf+0x62>
    126a:	88 0f       	add	r24, r24
    126c:	96 95       	lsr	r25
    126e:	87 95       	ror	r24
    1270:	97 f9       	bld	r25, 7
    1272:	08 95       	ret

00001274 <__fp_cmp>:
    1274:	99 0f       	add	r25, r25
    1276:	00 08       	sbc	r0, r0
    1278:	55 0f       	add	r21, r21
    127a:	aa 0b       	sbc	r26, r26
    127c:	e0 e8       	ldi	r30, 0x80	; 128
    127e:	fe ef       	ldi	r31, 0xFE	; 254
    1280:	16 16       	cp	r1, r22
    1282:	17 06       	cpc	r1, r23
    1284:	e8 07       	cpc	r30, r24
    1286:	f9 07       	cpc	r31, r25
    1288:	c0 f0       	brcs	.+48     	; 0x12ba <__fp_cmp+0x46>
    128a:	12 16       	cp	r1, r18
    128c:	13 06       	cpc	r1, r19
    128e:	e4 07       	cpc	r30, r20
    1290:	f5 07       	cpc	r31, r21
    1292:	98 f0       	brcs	.+38     	; 0x12ba <__fp_cmp+0x46>
    1294:	62 1b       	sub	r22, r18
    1296:	73 0b       	sbc	r23, r19
    1298:	84 0b       	sbc	r24, r20
    129a:	95 0b       	sbc	r25, r21
    129c:	39 f4       	brne	.+14     	; 0x12ac <__fp_cmp+0x38>
    129e:	0a 26       	eor	r0, r26
    12a0:	61 f0       	breq	.+24     	; 0x12ba <__fp_cmp+0x46>
    12a2:	23 2b       	or	r18, r19
    12a4:	24 2b       	or	r18, r20
    12a6:	25 2b       	or	r18, r21
    12a8:	21 f4       	brne	.+8      	; 0x12b2 <__fp_cmp+0x3e>
    12aa:	08 95       	ret
    12ac:	0a 26       	eor	r0, r26
    12ae:	09 f4       	brne	.+2      	; 0x12b2 <__fp_cmp+0x3e>
    12b0:	a1 40       	sbci	r26, 0x01	; 1
    12b2:	a6 95       	lsr	r26
    12b4:	8f ef       	ldi	r24, 0xFF	; 255
    12b6:	81 1d       	adc	r24, r1
    12b8:	81 1d       	adc	r24, r1
    12ba:	08 95       	ret

000012bc <__fp_inf>:
    12bc:	97 f9       	bld	r25, 7
    12be:	9f 67       	ori	r25, 0x7F	; 127
    12c0:	80 e8       	ldi	r24, 0x80	; 128
    12c2:	70 e0       	ldi	r23, 0x00	; 0
    12c4:	60 e0       	ldi	r22, 0x00	; 0
    12c6:	08 95       	ret

000012c8 <__fp_nan>:
    12c8:	9f ef       	ldi	r25, 0xFF	; 255
    12ca:	80 ec       	ldi	r24, 0xC0	; 192
    12cc:	08 95       	ret

000012ce <__fp_pscA>:
    12ce:	00 24       	eor	r0, r0
    12d0:	0a 94       	dec	r0
    12d2:	16 16       	cp	r1, r22
    12d4:	17 06       	cpc	r1, r23
    12d6:	18 06       	cpc	r1, r24
    12d8:	09 06       	cpc	r0, r25
    12da:	08 95       	ret

000012dc <__fp_pscB>:
    12dc:	00 24       	eor	r0, r0
    12de:	0a 94       	dec	r0
    12e0:	12 16       	cp	r1, r18
    12e2:	13 06       	cpc	r1, r19
    12e4:	14 06       	cpc	r1, r20
    12e6:	05 06       	cpc	r0, r21
    12e8:	08 95       	ret

000012ea <__fp_round>:
    12ea:	09 2e       	mov	r0, r25
    12ec:	03 94       	inc	r0
    12ee:	00 0c       	add	r0, r0
    12f0:	11 f4       	brne	.+4      	; 0x12f6 <__fp_round+0xc>
    12f2:	88 23       	and	r24, r24
    12f4:	52 f0       	brmi	.+20     	; 0x130a <__fp_round+0x20>
    12f6:	bb 0f       	add	r27, r27
    12f8:	40 f4       	brcc	.+16     	; 0x130a <__fp_round+0x20>
    12fa:	bf 2b       	or	r27, r31
    12fc:	11 f4       	brne	.+4      	; 0x1302 <__fp_round+0x18>
    12fe:	60 ff       	sbrs	r22, 0
    1300:	04 c0       	rjmp	.+8      	; 0x130a <__fp_round+0x20>
    1302:	6f 5f       	subi	r22, 0xFF	; 255
    1304:	7f 4f       	sbci	r23, 0xFF	; 255
    1306:	8f 4f       	sbci	r24, 0xFF	; 255
    1308:	9f 4f       	sbci	r25, 0xFF	; 255
    130a:	08 95       	ret

0000130c <__fp_split3>:
    130c:	57 fd       	sbrc	r21, 7
    130e:	90 58       	subi	r25, 0x80	; 128
    1310:	44 0f       	add	r20, r20
    1312:	55 1f       	adc	r21, r21
    1314:	59 f0       	breq	.+22     	; 0x132c <__fp_splitA+0x10>
    1316:	5f 3f       	cpi	r21, 0xFF	; 255
    1318:	71 f0       	breq	.+28     	; 0x1336 <__fp_splitA+0x1a>
    131a:	47 95       	ror	r20

0000131c <__fp_splitA>:
    131c:	88 0f       	add	r24, r24
    131e:	97 fb       	bst	r25, 7
    1320:	99 1f       	adc	r25, r25
    1322:	61 f0       	breq	.+24     	; 0x133c <__fp_splitA+0x20>
    1324:	9f 3f       	cpi	r25, 0xFF	; 255
    1326:	79 f0       	breq	.+30     	; 0x1346 <__fp_splitA+0x2a>
    1328:	87 95       	ror	r24
    132a:	08 95       	ret
    132c:	12 16       	cp	r1, r18
    132e:	13 06       	cpc	r1, r19
    1330:	14 06       	cpc	r1, r20
    1332:	55 1f       	adc	r21, r21
    1334:	f2 cf       	rjmp	.-28     	; 0x131a <__fp_split3+0xe>
    1336:	46 95       	lsr	r20
    1338:	f1 df       	rcall	.-30     	; 0x131c <__fp_splitA>
    133a:	08 c0       	rjmp	.+16     	; 0x134c <__fp_splitA+0x30>
    133c:	16 16       	cp	r1, r22
    133e:	17 06       	cpc	r1, r23
    1340:	18 06       	cpc	r1, r24
    1342:	99 1f       	adc	r25, r25
    1344:	f1 cf       	rjmp	.-30     	; 0x1328 <__fp_splitA+0xc>
    1346:	86 95       	lsr	r24
    1348:	71 05       	cpc	r23, r1
    134a:	61 05       	cpc	r22, r1
    134c:	08 94       	sec
    134e:	08 95       	ret

00001350 <__fp_zero>:
    1350:	e8 94       	clt

00001352 <__fp_szero>:
    1352:	bb 27       	eor	r27, r27
    1354:	66 27       	eor	r22, r22
    1356:	77 27       	eor	r23, r23
    1358:	cb 01       	movw	r24, r22
    135a:	97 f9       	bld	r25, 7
    135c:	08 95       	ret

0000135e <__mulsf3>:
    135e:	0e 94 c2 09 	call	0x1384	; 0x1384 <__mulsf3x>
    1362:	0c 94 75 09 	jmp	0x12ea	; 0x12ea <__fp_round>
    1366:	0e 94 67 09 	call	0x12ce	; 0x12ce <__fp_pscA>
    136a:	38 f0       	brcs	.+14     	; 0x137a <__mulsf3+0x1c>
    136c:	0e 94 6e 09 	call	0x12dc	; 0x12dc <__fp_pscB>
    1370:	20 f0       	brcs	.+8      	; 0x137a <__mulsf3+0x1c>
    1372:	95 23       	and	r25, r21
    1374:	11 f0       	breq	.+4      	; 0x137a <__mulsf3+0x1c>
    1376:	0c 94 5e 09 	jmp	0x12bc	; 0x12bc <__fp_inf>
    137a:	0c 94 64 09 	jmp	0x12c8	; 0x12c8 <__fp_nan>
    137e:	11 24       	eor	r1, r1
    1380:	0c 94 a9 09 	jmp	0x1352	; 0x1352 <__fp_szero>

00001384 <__mulsf3x>:
    1384:	0e 94 86 09 	call	0x130c	; 0x130c <__fp_split3>
    1388:	70 f3       	brcs	.-36     	; 0x1366 <__mulsf3+0x8>

0000138a <__mulsf3_pse>:
    138a:	95 9f       	mul	r25, r21
    138c:	c1 f3       	breq	.-16     	; 0x137e <__mulsf3+0x20>
    138e:	95 0f       	add	r25, r21
    1390:	50 e0       	ldi	r21, 0x00	; 0
    1392:	55 1f       	adc	r21, r21
    1394:	62 9f       	mul	r22, r18
    1396:	f0 01       	movw	r30, r0
    1398:	72 9f       	mul	r23, r18
    139a:	bb 27       	eor	r27, r27
    139c:	f0 0d       	add	r31, r0
    139e:	b1 1d       	adc	r27, r1
    13a0:	63 9f       	mul	r22, r19
    13a2:	aa 27       	eor	r26, r26
    13a4:	f0 0d       	add	r31, r0
    13a6:	b1 1d       	adc	r27, r1
    13a8:	aa 1f       	adc	r26, r26
    13aa:	64 9f       	mul	r22, r20
    13ac:	66 27       	eor	r22, r22
    13ae:	b0 0d       	add	r27, r0
    13b0:	a1 1d       	adc	r26, r1
    13b2:	66 1f       	adc	r22, r22
    13b4:	82 9f       	mul	r24, r18
    13b6:	22 27       	eor	r18, r18
    13b8:	b0 0d       	add	r27, r0
    13ba:	a1 1d       	adc	r26, r1
    13bc:	62 1f       	adc	r22, r18
    13be:	73 9f       	mul	r23, r19
    13c0:	b0 0d       	add	r27, r0
    13c2:	a1 1d       	adc	r26, r1
    13c4:	62 1f       	adc	r22, r18
    13c6:	83 9f       	mul	r24, r19
    13c8:	a0 0d       	add	r26, r0
    13ca:	61 1d       	adc	r22, r1
    13cc:	22 1f       	adc	r18, r18
    13ce:	74 9f       	mul	r23, r20
    13d0:	33 27       	eor	r19, r19
    13d2:	a0 0d       	add	r26, r0
    13d4:	61 1d       	adc	r22, r1
    13d6:	23 1f       	adc	r18, r19
    13d8:	84 9f       	mul	r24, r20
    13da:	60 0d       	add	r22, r0
    13dc:	21 1d       	adc	r18, r1
    13de:	82 2f       	mov	r24, r18
    13e0:	76 2f       	mov	r23, r22
    13e2:	6a 2f       	mov	r22, r26
    13e4:	11 24       	eor	r1, r1
    13e6:	9f 57       	subi	r25, 0x7F	; 127
    13e8:	50 40       	sbci	r21, 0x00	; 0
    13ea:	9a f0       	brmi	.+38     	; 0x1412 <__mulsf3_pse+0x88>
    13ec:	f1 f0       	breq	.+60     	; 0x142a <__mulsf3_pse+0xa0>
    13ee:	88 23       	and	r24, r24
    13f0:	4a f0       	brmi	.+18     	; 0x1404 <__mulsf3_pse+0x7a>
    13f2:	ee 0f       	add	r30, r30
    13f4:	ff 1f       	adc	r31, r31
    13f6:	bb 1f       	adc	r27, r27
    13f8:	66 1f       	adc	r22, r22
    13fa:	77 1f       	adc	r23, r23
    13fc:	88 1f       	adc	r24, r24
    13fe:	91 50       	subi	r25, 0x01	; 1
    1400:	50 40       	sbci	r21, 0x00	; 0
    1402:	a9 f7       	brne	.-22     	; 0x13ee <__mulsf3_pse+0x64>
    1404:	9e 3f       	cpi	r25, 0xFE	; 254
    1406:	51 05       	cpc	r21, r1
    1408:	80 f0       	brcs	.+32     	; 0x142a <__mulsf3_pse+0xa0>
    140a:	0c 94 5e 09 	jmp	0x12bc	; 0x12bc <__fp_inf>
    140e:	0c 94 a9 09 	jmp	0x1352	; 0x1352 <__fp_szero>
    1412:	5f 3f       	cpi	r21, 0xFF	; 255
    1414:	e4 f3       	brlt	.-8      	; 0x140e <__mulsf3_pse+0x84>
    1416:	98 3e       	cpi	r25, 0xE8	; 232
    1418:	d4 f3       	brlt	.-12     	; 0x140e <__mulsf3_pse+0x84>
    141a:	86 95       	lsr	r24
    141c:	77 95       	ror	r23
    141e:	67 95       	ror	r22
    1420:	b7 95       	ror	r27
    1422:	f7 95       	ror	r31
    1424:	e7 95       	ror	r30
    1426:	9f 5f       	subi	r25, 0xFF	; 255
    1428:	c1 f7       	brne	.-16     	; 0x141a <__mulsf3_pse+0x90>
    142a:	fe 2b       	or	r31, r30
    142c:	88 0f       	add	r24, r24
    142e:	91 1d       	adc	r25, r1
    1430:	96 95       	lsr	r25
    1432:	87 95       	ror	r24
    1434:	97 f9       	bld	r25, 7
    1436:	08 95       	ret

00001438 <__udivmodsi4>:
    1438:	a1 e2       	ldi	r26, 0x21	; 33
    143a:	1a 2e       	mov	r1, r26
    143c:	aa 1b       	sub	r26, r26
    143e:	bb 1b       	sub	r27, r27
    1440:	fd 01       	movw	r30, r26
    1442:	0d c0       	rjmp	.+26     	; 0x145e <__udivmodsi4_ep>

00001444 <__udivmodsi4_loop>:
    1444:	aa 1f       	adc	r26, r26
    1446:	bb 1f       	adc	r27, r27
    1448:	ee 1f       	adc	r30, r30
    144a:	ff 1f       	adc	r31, r31
    144c:	a2 17       	cp	r26, r18
    144e:	b3 07       	cpc	r27, r19
    1450:	e4 07       	cpc	r30, r20
    1452:	f5 07       	cpc	r31, r21
    1454:	20 f0       	brcs	.+8      	; 0x145e <__udivmodsi4_ep>
    1456:	a2 1b       	sub	r26, r18
    1458:	b3 0b       	sbc	r27, r19
    145a:	e4 0b       	sbc	r30, r20
    145c:	f5 0b       	sbc	r31, r21

0000145e <__udivmodsi4_ep>:
    145e:	66 1f       	adc	r22, r22
    1460:	77 1f       	adc	r23, r23
    1462:	88 1f       	adc	r24, r24
    1464:	99 1f       	adc	r25, r25
    1466:	1a 94       	dec	r1
    1468:	69 f7       	brne	.-38     	; 0x1444 <__udivmodsi4_loop>
    146a:	60 95       	com	r22
    146c:	70 95       	com	r23
    146e:	80 95       	com	r24
    1470:	90 95       	com	r25
    1472:	9b 01       	movw	r18, r22
    1474:	ac 01       	movw	r20, r24
    1476:	bd 01       	movw	r22, r26
    1478:	cf 01       	movw	r24, r30
    147a:	08 95       	ret

0000147c <__divmodsi4>:
    147c:	05 2e       	mov	r0, r21
    147e:	97 fb       	bst	r25, 7
    1480:	1e f4       	brtc	.+6      	; 0x1488 <__divmodsi4+0xc>
    1482:	00 94       	com	r0
    1484:	0e 94 55 0a 	call	0x14aa	; 0x14aa <__negsi2>
    1488:	57 fd       	sbrc	r21, 7
    148a:	07 d0       	rcall	.+14     	; 0x149a <__divmodsi4_neg2>
    148c:	0e 94 1c 0a 	call	0x1438	; 0x1438 <__udivmodsi4>
    1490:	07 fc       	sbrc	r0, 7
    1492:	03 d0       	rcall	.+6      	; 0x149a <__divmodsi4_neg2>
    1494:	4e f4       	brtc	.+18     	; 0x14a8 <__divmodsi4_exit>
    1496:	0c 94 55 0a 	jmp	0x14aa	; 0x14aa <__negsi2>

0000149a <__divmodsi4_neg2>:
    149a:	50 95       	com	r21
    149c:	40 95       	com	r20
    149e:	30 95       	com	r19
    14a0:	21 95       	neg	r18
    14a2:	3f 4f       	sbci	r19, 0xFF	; 255
    14a4:	4f 4f       	sbci	r20, 0xFF	; 255
    14a6:	5f 4f       	sbci	r21, 0xFF	; 255

000014a8 <__divmodsi4_exit>:
    14a8:	08 95       	ret

000014aa <__negsi2>:
    14aa:	90 95       	com	r25
    14ac:	80 95       	com	r24
    14ae:	70 95       	com	r23
    14b0:	61 95       	neg	r22
    14b2:	7f 4f       	sbci	r23, 0xFF	; 255
    14b4:	8f 4f       	sbci	r24, 0xFF	; 255
    14b6:	9f 4f       	sbci	r25, 0xFF	; 255
    14b8:	08 95       	ret

000014ba <__tablejump2__>:
    14ba:	ee 0f       	add	r30, r30
    14bc:	ff 1f       	adc	r31, r31
    14be:	05 90       	lpm	r0, Z+
    14c0:	f4 91       	lpm	r31, Z
    14c2:	e0 2d       	mov	r30, r0
    14c4:	09 94       	ijmp

000014c6 <_exit>:
    14c6:	f8 94       	cli

000014c8 <__stop_program>:
    14c8:	ff cf       	rjmp	.-2      	; 0x14c8 <__stop_program>
